FORMAT: 1A
HOST: https://fitgroup.com.br/fitgroup_tickets/api/v1/

# Fitgroup Tickets - Manual API

Esta documentação detalha os endpoints disponíveis na API do sistema de atendimento Fitgroup via tickets.

## Postman
Recomendamos que as requisições apresentadas nessa documentação sejam testadas previamente através do [Postman](https://www.postman.com/downloads/), ou outro software equivalente para execução de requisições como o [Insomnia](https://insomnia.rest/download).
A coleção do Postman com todos os endpoints aqui documentados pode ser baixada livremente através do botão abaixo:

[![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/18837025-34183c23-2b1e-4cf1-a3c5-db62dae4dd69?action=collection%2Ffork&collection-url=entityId%3D18837025-34183c23-2b1e-4cf1-a3c5-db62dae4dd69%26entityType%3Dcollection%26workspaceId%3D1d640920-b245-4f6d-87f8-a0dccda2f7f3)

## Autenticação

A autenticação é feita através do fornecimento da sua API Key. Ela deve ser transmitida em todas as requisições no
header `access_token`. Caso a API Key seja inválida ou não seja informada, o API retornará `HTTP 401`.

## Códigos HTTP das respostas

A API utiliza respostas HTTP convencionais para indicar sucesso ou falha nas requisições.
Respostas com status 200 indicam sucesso, status 4xx indicam falhas decorrentes de erros nas informações enviadas,
e status 500 indicam erros internos no servidor do Asaas.

| Código HTTP | Descrição |
|---|---|
| **200** OK | Sua requisição foi bem sucedida. |
| **400** Bad Request | Algum parâmetro obrigatório não foi enviado ou é inválido. Neste caso a própria resposta indicará qual é o problema. |
| **401** Unauthorized | Não foi enviada API Key ou ela é inválida. |
| **404** Not Found | O endpoint ou o objeto solicitado não existe. |
| **500** Internal Server Error | Algo deu errado no servidor do Asaas. |

Todos os endpoints da API recebem e respondem em JSON.

##### Exemplo de resposta para HTTP 400:
```
{
    "errors":[
        {
            "code":"invalid_date",
            "description":"Informe uma data válida"
        },
        {
            "code":"invalid_name",
            "description":"O campo name deve ser enviado"
        }
    ]
}
```

#### Retornando HTTP 200
Para que se considere a notificação como processada com sucesso, o status HTTP da resposta deve ser `200`.

# CLIENTES
## Recuperar dados de um cliente [GET /clientes/client_info.php]

Para recuperar um cliente específico é necessário que você tenha o seu ID.

+ Parameters
    + id - Identificador único do cliente

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Body

            {
                "object": "cliente",
                "id": "1",
                "name": "Academia Teste",
                "companyName": "Dill Fitness Ltda",
                "email": "academia.teste@gmail.com",
                "mobilePhone": "31971636968",
                "phone": "3141018508",
                "address": "Av. Paulista",
                "addressNumber": "150",
                "complement": "Sala 201",
                "province": "Centro",
                "city": "São Paulo",
                "state": "SP",
                "postalCode": "01310000",
                "country": "Brasil",
                "observations": "ótimo pagador, nenhum problema até o momento"
            }

### Listar clientes [GET /clientes/clientes_list.php{?name,company_name,email,city,state}]
Diferente da recuperação de um cliente específico, este método retorna
uma lista com todos os clientes para os filtros informados.

Filtrar por nome: `GET https://fitgroup.com.br/fitgroup_tickets/api/v1/clientes?name=Academia`

Filtrar por email: `GET https://fitgroup.com.br/fitgroup_tickets/api/v1/clientes?name=acadeteste@gmail.com`

+ Parameters
    + name (optional) - Filtrar por nome
    + email (optional) - Filtrar por email
    + city (optional) - Filtrar por cidade
    + state (optional) - Filtrar por estado
    + contact (optional) - Filtrar por pessoa de contato

+ Request

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

        {
            "object": "clientes_list",
            "totalCount": 50,
            "data": [
                {
                "object": "cliente",
                "id": "1",
                "name": "Academia Teste",
                "companyName": "Dill Fitness Ltda",
                "email": "academia.teste@gmail.com",
                "mobilePhone": "31971636968",
                "phone": "3141018508",
                "address": "Av. Paulista",
                "addressNumber": "150",
                "complement": "Sala 201",
                "province": "Centro",
                "city": "São Paulo",
                "state": "SP",
                "postalCode": "01310000",
                "country": "Brasil",
                "observations": "ótimo pagador, nenhum problema até o momento"
                },
                {
                "object": "cliente",
                "id": "1005",
                "name": "Nados Fitness",
                "companyName": "MKL Atividades Fisicas Ltda",
                "email": "nadosfit@gmail.com",
                "mobilePhone": "31992064254",
                "phone": "3121158878",
                "address": "Rua Visconde de Taunay",
                "addressNumber": "514,
                "complement": "",
                "province": "São João Batista",
                "city": "Belo Horizonte",
                "state": "MG",
                "postalCode": "31525-020",
                "country": "Brasil",
                "observations": "just myself"   
                }
            ]
        }

### Atualizar cliente existente [POST /clientes/cliente_update.php]

Permite atualizar as informações de um cliente já existente.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (ClienteUpd)


    + Body
            {
                "id": "1",
                "email": "novo_email@gmail.com",
                "phone": "4735515675",
                "mobilePhone": "4799857841",
                "postalCode": "01310-000",
                "address": "Av. Paulista",
                "addressNumber": "150",
                "complement": "Sala 201",
                "province": "Centro",
                "city": "São Paulo",
                "state": "SP",
                "observations": "ótimo pagador, nenhum problema até o momento"
            }


+ Response 200 (application/json)


    + Body

            {
                "object": "cliente",
                "id": "1",
                "name": "Academia Teste",
                "companyName": "Dill Fitness Ltda",
                "email": "academia.teste@gmail.com",
                "mobilePhone": "31971636968",
                "phone": "3141018508",
                "address": "Av. Paulista",
                "addressNumber": "150",
                "complement": "Sala 201",
                "province": "Centro",
                "city": "São Paulo",
                "state": "SP",
                "postalCode": "01310000",
                "country": "Brasil",
                "observations": "ótimo pagador, nenhum problema até o momento"
            }




## Cobranças [/payments]

Os status possíveis de uma cobrança são os seguintes:

`PENDING` - Aguardando pagamento

`RECEIVED` - Recebida (saldo já creditado na conta)

`CONFIRMED` - Pagamento confirmado (saldo ainda não creditado)

`OVERDUE` - Vencida

`REFUNDED` - Estornada

`RECEIVED_IN_CASH` - Recebida em dinheiro (não gera saldo na conta)

`REFUND_REQUESTED` - Estorno Solicitado

`CHARGEBACK_REQUESTED` - Recebido chargeback

`CHARGEBACK_DISPUTE` - Em disputa de chargeback (caso sejam apresentados documentos para contestação)

`AWAITING_CHARGEBACK_REVERSAL` - Disputa vencida, aguardando repasse da adquirente

`DUNNING_REQUESTED` - Em processo de recuperação

`DUNNING_RECEIVED` - Recuperada

`AWAITING_RISK_ANALYSIS` - Pagamento em análise

### Criar nova cobrança [POST]

Cria uma nova cobrança. É possível escolher entre as formas de pagamento com boleto, cartão de crédito, Pix ou permitir que o cliente escolha a forma que desejar.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewPayment)

    + Body
            {
                "customer": "{CUSTOMER_ID}",
                "billingType": "BOLETO",
                "dueDate": "2017-06-10",
                "value": 100.00,
                "description": "Pedido 056984",
                "externalReference": "056984",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "postalService": false
            }


+ Response 200 (application/json)

    + Attributes (Payment)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-06-10",
                "value": 100.00,
                "netValue": 95.00,
                "billingType": "BOLETO",
                "status": "PENDING",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                "invoiceNumber": "00005101",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }


### Criar cobrança com cartão de crédito [POST]
Ao criar uma cobrança com a forma de pagamento cartão de crédito, é possível redirecionar o cliente para a
URL da fatura (`invoiceUrl`) afim de que ele informe os dados do cartão através da interface do Asaas,
ou os dados do cartão e do portador podem ser enviados na requisição de criação para que o pagamento já seja processado.

Para tal, ao executar a requisição de criação da cobrança, basta enviar os dados do cartão de crédito juntamente
com os dados do titular através dos objetos `creditCard` e `creditCardHolderInfo`. É importante que os dados
do titular sejam exatamente os mesmos cadastrados no banco emissor do cartão, caso contrário a transação poderá
ser negada por suspeita de fraude.

Se a transação for autorizada a cobrança será criada e o Asaas retornará `HTTP 200`. Caso contrário
a cobrança não será persistida e será retornado `HTTP 400`.

Em `Sandbox` as transações são aprovadas automaticamente, caso queira simular um erro é necessário informar o cartão de crédito de número `5184019740373151 (Mastercard)` ou `4916561358240741 (Visa)`.

> **Atenção:**
> - Independente da data de vencimento informada, a captura (cobrança no cartão do cliente) será efetuada no momento da criação da cobrança.
> - Caso você opte por capturar na interface do seu sistema os dados do cartão do cliente, é
obrigatório o uso de SSL (HTTPS), caso contrário sua conta pode ser bloqueada para transações via
cartão de crédito.
> - Para se evitar timeouts e decorrentemente duplicidades na captura, recomendamos a configuração de um timeout mínimo de 60 segundos para este request.

##### Tokenização de cartão de crédito <a name="tokenizacao-de-cartao-de-credito"></a>
Essa funcionalidade permite você cobrar de seus clientes recorrentemente sem a necessidade deles informarem todos os dados de cartão de crédito novamente.
Tudo isso de forma segura por meio de um token.

Ao realizar uma primeira transação para o cliente com cartão de crédito, a resposta do Asaas lhe devolverá dentro do objeto `creditCard`, o atributo `creditCardToken`.
Em posse dessa informação, nas próximas transações, o atributo `creditCardToken` pode substituir os objetos `creditCard` e `creditCardHolderInfo` e ser informado diretamente na raiz da requisição, não necessitando assim que os objetos sejam informados novamente.

> **Atenção**:
> - A funcionalidade de tokenização está previamente habilitada em Sandbox e você já pode testá-la. Para uso em produção, é necessário solicitar a habilitação da funcionalidade ao seu gerente de contas.
> - O token é armazenado por cliente, não podendo ser utilizado em transações de outros clientes

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewPaymentWithCreditCard)

    + Body
            {
                "customer": "cus_0T1mdomVMi39",
                "billingType": "CREDIT_CARD",
                "dueDate": "2017-03-15",
                "value": 100.00,
                "description": "Pedido 056984",
                "externalReference": "056984",
                "creditCard": {
                    "holderName": "marcelo h almeida",
                    "number": "5162306219378829",
                    "expiryMonth": "05",
                    "expiryYear": "2021",
                    "ccv": "318"
                },
                "creditCardHolderInfo": {
                    "name": "Marcelo Henrique Almeida",
                    "email": "marcelo.almeida@gmail.com",
                    "cpfCnpj": "24971563792",
                    "postalCode": "89223-005",
                    "addressNumber": "277",
                    "addressComplement": null,
                    "phone": "4738010919",
                    "mobilePhone": "47998781877"
                },
                "creditCardToken": "76496073-536f-4835-80db-c45d00f33695"
            }


+ Response 200 (application/json)

    + Attributes (PaymentWithCreditCard)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-03-15",
                "value": 100.00,
                "netValue": 94.51,
                "billingType": "CREDIT_CARD",
                "status": "CONFIRMED",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "confirmedDate": "2017-03-15",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": "https://www.asaas.com/comprovantes/9732f4ae3a760ce63e7640e9016d4be1",
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": null,
                "invoiceNumber": "00005101",
                "deleted": false,
                "postalService": false,
                "anticipated": false,
                "creditCard": {
                    "creditCardNumber": "8829",
                    "creditCardBrand": "MASTERCARD",
                    "creditCardToken": "a75a1d98-c52d-4a6b-a413-71e00b193c99"
                }
            }


### Criar uma cobrança parcelada [POST]

Para criar uma cobrança parcelada, ao invés de enviar o parâmetro `value`, envie `installmentCount`
e `installmentValue`, que representam o **número de parcelas** e o **valor da cada parcela** respectivamente.

Caso prefira informar apenas o valor total do parcelamento, envie o campo `totalValue` no lugar do `installmentValue` com o valor desejado. Se não for possível a divisão exata dos valores de cada parcela, a diferença sera compensada na última parcela.
Por exemplo, um parcelamento com o valor total de R$ 350,00 divido em 12 vezes geraria 11 parcelas no valor de R$: 29,16, sendo a décima segunda parcela no valor de R$: 29,24, totalizando R$: 350.00.

A resposta em caso de sucesso será a primeira cobrança do parcelamento. Caso queira recuperar todas as parcelas basta
executa a seguinte requisição com o `installment` retornado :

`GET https://www.asaas.com/api/v3/payments?installment={installment_id}`

Outras ações sobre o parcelamento podem ser encontradas em nossa [seção de parcelamentos](#reference/parcelamentos).

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewPayment)

    + Body
            {
                "customer": "{CUSTOMER_ID}",
                "billingType": "BOLETO",
                "installmentCount": 6,
                "installmentValue": 20.00,
                "dueDate": "2017-06-10",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                }
            }


+ Response 200 (application/json)

    + Attributes (Payment)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "installment": "ins_000000114044",
                "dueDate": "2017-06-10",
                "value": 20.00,
                "netValue": 15.00,
                "billingType": "BOLETO",
                "status": "PENDING",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                "invoiceNumber": "00005101",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }

### Recuperar uma única cobrança [GET /payments/{id}]

Para recuperar uma cobrança específica é necessário que você tenha o ID
que o Asaas retornou no momento da criação dela.

+ Parameters
    + id - Identificador único da cobrança no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (Payment)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": "997152082166122",
                "dueDate": "2017-06-10",
                "value": 100.00,
                "netValue": 95.00,
                "billingType": "BOLETO",
                "status": "PENDING",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                "invoiceNumber": "00005101",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }



### Listar cobranças [GET /payments{?customer,billingType,status,subscription,installment,externalReference,paymentDate,anticipated,paymentDate%5Bge%5D,paymentDate%5Ble%5D,dueDate%5Bge%5D,dueDate%5Ble%5D,offset,limit}]
Diferente da recuperação de uma cobrança específica, este método retorna
uma lista paginada com todas as cobranças para os filtros informados.

##### Exemplos de filtros

Listar cobranças de um cliente específico: `GET https://www.asaas.com/api/v3/payments?customer={customer_id}`

Filtrar por forma de pagamento: `GET https://www.asaas.com/api/v3/payments?billingType=CREDIT_CARD`

Filtrar por status: `GET https://www.asaas.com/api/v3/payments?status=RECEIVED`

Filtrar por status e forma de pagamento: `GET https://www.asaas.com/api/v3/payments?status=RECEIVED&billingType=CREDIT_CARD`

Filtrar por data de vencimento inicial e final: `GET https://www.asaas.com/api/v3/payments?dueDate%5Bge%5D=2017-01-12&dueDate%5Ble%5D=2017-11-28`

Filtrar por data de recebimento inicial e final: `GET https://www.asaas.com/api/v3/payments?paymentDate%5Bge%5D=2017-01-12&paymentDate%5Ble%5D=2017-11-28`

Filtrar apenas cobranças antecipadas: `GET https://www.asaas.com/api/v3/payments?anticipated=true`


+ Parameters
    + customer (optional) - Filtrar pelo Identificador único do cliente
    + billingType (optional, enum) - Filtrar por forma de pagamento
    + status (optional, enum) - Filtrar por status
    + subscription (optional) - Filtrar pelo Identificador único da assinatura
    + installment (optional) - Filtrar pelo Identificador único do parcelamento
    + externalReference (optional) - Filtrar pelo Identificador do seu sistema
    + paymentDate (optional) - Filtrar pela data de pagamento
    + anticipated (optional, boolean) - Filtrar registros antecipados ou não
    + paymentDate%5Bge%5D (optional) - Filtrar a partir da data de recebimento inicial
    + paymentDate%5Ble%5D (optional) - Filtrar a partir da data de recebimento final
    + dueDate%5Bge%5D (optional) - Filtrar a partir da data de vencimento inicial
    + dueDate%5Ble%5D (optional) - Filtrar a partir da data de vencimento final
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)


    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "payment",
                    "id": "pay_080225913252",
                    "dateCreated": "2017-03-10",
                    "customer": "cus_G7Dvo4iphUNk",
                    "paymentLink": "997152082166122",
                    "value": 200.00,
                    "netValue": 195.00,
                    "originalValue": null,
                    "interestValue": null,
                    "description": null,
                    "billingType": "BOLETO",
                    "status": "PENDING",
                    "dueDate": "2017-03-16",
                    "originalDueDate": "2017-03-16",
                    "paymentDate": null,
                    "clientPaymentDate": null,
                    "transactionReceiptUrl": null,
                    "invoiceUrl": "https://www.asaas.com/i/080225913252",
                    "invoiceNumber": "00005101",
                    "externalReference": null,
                    "deleted": false,
                    "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                    "postalService": true,
                    "anticipated": false
                },
                {
                    "object": "payment",
                    "id": "pay_961122153955",
                    "dateCreated": "2017-03-08",
                    "customer": "cus_twmWzMzoTYoh",
                    "paymentLink": null,
                    "value": 50.00,
                    "netValue": 45.00,
                    "originalValue": null,
                    "interestValue": null,
                    "description": "Pedido 001387895",
                    "billingType": "CREDIT_CARD",
                    "status": "PENDING",
                    "dueDate": "2017-04-16",
                    "originalDueDate": "2017-04-30",
                    "paymentDate": null,
                    "clientPaymentDate": null,
                    "transactionReceiptUrl": null,
                    "invoiceUrl": "https://www.asaas.com/i/961122153955",
                    "invoiceNumber": "00005100",
                    "externalReference": null,
                    "deleted": false,
                    "bankSlipUrl": "https://www.asaas.com/b/pdf/961122153955",
                    "postalService": false,
                    "anticipated": false
                }
            ]
        }


### Atualizar cobrança existente [POST /payments/{id}]

Somente é possível atualizar cobranças aguardando pagamento ou vencidas. Uma vez criada, não é possível alterar
o cliente ao qual a cobrança pertence.

+ Parameters
    + id (required) ... Identificador único da cobrança a ser atualizada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewPayment)

    + Body
            {
                "billingType": "BOLETO",
                "dueDate": "2017-06-10",
                "value": 100.00,
                "description": "Pedido 056984",
                "externalReference": "056984",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "postalService": false
            }

+ Response 200 (application/json)

    + Attributes (Payment)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-06-10",
                "value": 100.00,
                "netValue": 95.00,
                "billingType": "BOLETO",
                "status": "PENDING",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                "invoiceNumber": "00005101",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }

### Remover cobrança [DELETE /payments/{id}]

Somente cobranças aguardando pagamento ou vencidas podem ser removidas.

+ Parameters
    + id (required) ... Identificador único da cobrança a ser removida.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Body

            {
                "deleted": true,
                "id": "pay_pCczZjBBr6RL"
            }


### Restaurar cobrança removida [POST /payments/{id}/restore]

Restaurar cobranças removidas.

+ Parameters
    + id (required) ... Identificador único da cobrança a ser restaurada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Payment)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-06-10",
                "value": 100.00,
                "netValue": 95.00,
                "billingType": "BOLETO",
                "status": "PENDING",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                "invoiceNumber": "00005101",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }


### Estornar cobrança [POST /payments/{id}/refund]

É possível estornar cobranças via cartão de crédito recebidas ou confirmadas. Ao fazer isto o saldo correspondente
é debitado de sua conta no Asaas e a cobrança cancelada no cartão do seu cliente. O cancelamento pode levar até
10 dias úteis para aparecer na fatura de seu cliente.

+ Parameters
    + id (required) ... Identificador único da cobrança a ser estornada.
        + Default: `id`

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (PaymentWithCreditCard)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-03-15",
                "value": 100.00,
                "netValue": 94.51,
                "billingType": "CREDIT_CARD",
                "status": "REFUNDED",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "confirmedDate": "2017-03-15",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": "https://www.asaas.com/comprovantes/9732f4ae2a760ce63e7640e9016d4be2",
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": null,
                "invoiceNumber": "00005101",
                "deleted": false,
                "postalService": false,
                "anticipated": false,
                "creditCard": {
                    "creditCardNumber": "8829",
                    "creditCardBrand": "MASTERCARD",
                    "creditCardToken": "a75a1d98-c52d-4a6b-a413-71e00b193c99"
                }
            }

### Obter linha digitável do boleto [GET /payments/{id}/identificationField]

A linha digitável do boleto é a representação numérica do código de barras. Essa informação pode ser disponibilizada ao seu cliente para pagamento do boleto diretamente no Internet Banking. Ao gerar uma cobrança com as formas de pagamento `BOLETO` ou `UNDEFINED`, a linha digitável pode ser recuperada.

Para recuperar a linha digitável do boleto, é necessário informar o ID da cobrança que o Asaas retornou no momento da criação. Como retorno, você receberá a linha digitável.

> **Atenção:** Caso a cobrança seja atualizada, a linha digitável também sofrerá alterações. O indicado é que a cada nova atualização da cobrança a linha digitável seja novamente recuperada, garantindo que você sempre estará exibindo a linha digitável atualizada.

+ Parameters

    + id (required) ... Identificador único da cobrança a ser recebida.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Body

            {
                "identificationField": "00190000090275928800021932978170187890000005000"
            }

### Obter QR Code para pagamentos via Pix [GET /payments/{id}/pixQrCode]

O recebimento via Pix é um meio rápido, eficaz e seguro para que sua empresa receba as cobranças de seus clientes. Ao gerar uma cobrança com as formas de pagamento "PIX", "BOLETO" ou "UNDEFINED" o pagamento via Pix é habilitado. Uma das maiores vantagens dessa forma de pagamento é que ocorre de forma instantânea, ou seja, assim que o pagamento for realizado o saldo é disponibilizado em sua conta Asaas. Você pode ler mais sobre o Pix [aqui](https://www.bcb.gov.br/estabilidadefinanceira/pix).

No Asaas você não precisa cadastrar uma chave para oferecer o Pix ao seus clientes. Através de uma chave cadastrada com o CNPJ do Asaas, em um parceiro, oferecemos a geração de QR Codes vinculados a suas cobranças.

Para gerar/recuperar o QR Code de uma cobrança é necessário que informar o ID da cobrança que o Asaas retornou no momento da criação. Como retorno, você obterá o QR Code (retornado em imagem no formato Base 64) e um Payload para permitir o Pix Copia e Cola.

Todo QR Code obtido pode ser pago até 23:59 do mesmo dia. A cada atualização em sua cobrança, é necessário obter um novo QR Code.

+ Parameters

    + id (required) ... Identificador único da cobrança a ser recebida.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Body

            {
                "encodedImage": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAGLCAIAAAC5gincAAAOaUlEQVR42u3aUXJjIRADQN//0ruHCCMNvNavE9sPmCZVyu+fiMjW/CyBiBBKRIRQIkIoERFCiQihREQIJSJCKBEhlIgIoUSEUCIihBIRIZSIEEpEhFAiQigREUKJiBBKRAglIkIoESGUiAihREQIJSKEEhFZLtQvlYOf+5e3+sviHFzYuS2b2/2/LM6Sg3TwEf7yamxS5kaDUIQiFKEIRShCEYpQhCIUoQhFKEIRilCEelqo2Du30IlNTuwWickYs++Ka6O1+3e8M6EIRShCEYpQhCIUoQhFKEIRilCEIhShCPWUUHNFycExm6tvYsc99iVbyrQqttiGtkSOVZmEIhShCEUoQhGKUIQiFKEIRShCEYpQhCIUoeaff8lpuGL7WyMagyP2uzsLZUIRilCEIhShCEUoQhGKUIQiFKEIRShCEYpQXxVqSRM090Rz035wB5fM5MEHXHLqWq03oQhFKEIRilCEIhShCEUoQhGKUIQiFKEIRah4EzR3sGI0xFYjhmyrF1vS5M4RHMO9NaGEIhShCEUoQhGKUIQiFKEIRShCEYpQhCLUh4WK7bdXverV421dq5wllFe96lVCEcqrXiUUoZwzr3qVUITyqlcJdblQrfyFs7lGJlbftA5lq388uN1zhVRry/49F0IRilCEIhShCEUoQhGKUIQiFKEIRShCEeotoVpt3RIKW63KFWkt3dyVE+Nsbujm3opQhCIUoQhFKEIRilCEIhShCEUoQhGKUIR6WqhWTxT7Gkt6sVaHuOQWae3vki4v9p2XVIqEIhShCEUoQhGKUIQiFKEIRShCEYpQhCLU5V1erK+JNUGt7vKKEq1VV8WO6NzCLrmQ/q0MoQhFKEIRilCEIhShCEUoQhGKUIQiFKEIdZtQB9fuikO5hO+d076ku4wtzvOl8IP/bUAoQhGKUIQiFKEIRShCEYpQhCIUoQhFKEIVhJrzK9ZAzZVZsc9ttXWtu+3GZjN2IV1xERKKUIQiFKEIRShCEYpQhCIUoQhFKEIRilC3CRWrBlp11ZJyZ8kJPvj4rZtv7tUbt6z1zoQiFKEIRShCEYpQhCIUoQhFKEIRilCEItRbQs1tcKyPi8l4cIB3Xhux1myuU4uh0yqj7zixhCIUoQhFKEIRilCEIhShCEUoQhGKUIQi1GVC7Vys2Omf86t1McTsW7JWMdx3krS0QyQUoQhFKEIRilCEIhShCEUoQhGKUIQiFKE+JFTrfO8cpIOn/2DzFaMh1uTO3XxXoLPkeBOKUIQiFKEIRShCEYpQhCIUoQhFKEIRilBvCdXqAuZWJ3YoD/ZEc47ESsMlM9n64YNrteSDCEUoQhGKUIQiFKEIRShCEYpQhCIUoQhFKELNj1mrFmwVNK2abEnfOncmY5ViqxZsXe2EIhShCEUoQhGKUIQiFKEIRShCEYpQhCLUh4WK1Qpz2zA3dYPdR2nZY/TH4Gi1dUt2cMkNRChCEYpQhCIUoQhFKEIRilCEIhShCEUoQr0l1NwPt8CKVWytm6DVIS5ZuiX3Uwyd1t8BhCIUoQhFKEIRilCEIhShCEUoQhGKUIQi1FtCLenFWn7NnbNWE9Sa55gFMZKuuOpiB5hQhCIUoQhFKEIRilCEIhShCEUoQhGKUIT6klBzs3FFETZ3sG78VrFOLebmexbsDKEIRShCEYpQhCIUoQhFKEIRilCEIhShCHWbUEtWdmcfFzvBNxasVxSOrWtyyW3dkpFQhCIUoQhFKEIRilCEIhShCEUoQhGKUIT6UpcX67ZardnzzeYVd8zzrejBldzyBwehCEUoQhGKUIQiFKEIRShCEYpQhCIUoQj1lFBzPVHsh5fsd8vrgwMcW+dYSdpa55ibraaPUIQiFKEIRShCEYpQhCIUoQhFKEIRilCEekuoVpfXUmZJFdLalCVF55JS+OA8txypnVhCEYpQhCIUoQhFKEIRilCEIhShCEUoQhHqbqFaZdbcKVxyoGMjGtujWM8bawlb11XsxL7Q5RGKUIQiFKEIRShCEYpQhCIUoQhFKEIRilCFLu+KiY3pFiuGYhYcrPZaZVZsYQfnOQXHC10eoQhFKEIRilCEIhShCEUoQhGKUIQiFKEINSJUa7xbOxr73Z3D0NJtyR61LqTYDC6hkFCEIhShCEUoQhGKUIQiFKEIRShCEYpQhLpNqAfqm50jOrcasc+dW6u5DjFGw9xYtfpWQhGKUIQiFKEIRShCEYpQhCIUoQhFKEIR6sNCzc3GHJSxZmTJcV9yZFu3V+sGit1ecx/UWmdCEYpQhCIUoQhFKEIRilCEIhShCEUoQhHqNqFausW28OCoLBnC344cfN4b67mdW7ZFBkIRilCEIhShCEUoQhGKUIQiFKEIRShCEeopoXaOWaxkiR2OudVQ3i2chdbxzv2VQChCEYpQhCIUoQhFKEIRilCEIhShCEUoQt0t1JL6JvYIf/nOsbWa4+zggV7Se7aKsNbj76z2CEUoQhGKUIQiFKEIRShCEYpQhCIUoQhFqNuE+p3LwWYkNiq/sbRqo1hP1IKyddW1WsK5O5VQhCIUoQhFKEIRilCEIhShCEUoQhGKUIQi1EAHccV4z53CnUP4S+XfjsR2f+c1OTfshCIUoQhFKEIRilCEIhShCEUoQhGKUIQiFKHiJykG5ZIirDWTc4N0cJ5bdVWsQ2zVkYQiFKEIRShCEYpQhCIUoQhFKEIRilCEIhShrrLgitJwbpBajx/zK3bjHlyNJTd9DB1CEYpQhCIUoQhFKEIRilCEIhShCEUoQhGKUAMneO7V2Fu1jt3BLVtyvndeOQfv8hvHilCEIhShCEUoQhGKUIQiFKEIRShCEYpQhPqSULH6ZmdpGKvJYu8cE7nVisZOTmytYpzlrhxCEYpQhCIUoQhFKEIRilCEIhShCEUoQhHqMqEODkPrg5aclZa5c4tzRZU5d220KrbY8b7yvw0IRShCEYpQhCIUoQhFKEIRilCEIhShCEWoRJf3l8MR+92DuzK3Z616rjXtS+xbchhix2znHUMoQhGKUIQiFKEIRShCEYpQhCIUoQhFKELdJtTBrqc1Oc9LcfBbzVV7Mfvm3qq1ZUtqX0IRilCEIhShCEUoQhGKUIQiFKEIRShCEerDQh3cwgdKtFZPFPtWsc507lzNrcaSTm3uIOUen1CEIhShCEUoQhGKUIQiFKEIRShCEYpQhCLU6vKudfrf63qWzEarYtt5iyzxmlCEIhShCEUoQhGKUIQiFKEIRShCEYpQhLpcqFhdFSs7lnAW+1ZzwxArdmNHdMmWtWbwyi6PUIQiFKEIRShCEYpQhCIUoQhFKEIRilCEKnR5sc6l1RMtOYUxoHNnNNWpLXnn2PFu3eWEIhShCEUoQhGKUIQiFKEIRShCEYpQhCLUl4Q6WA20CqmDJO1c2AfWeclqDI7ojvq19ucIoQhFKEIRilCEIhShCEUoQhGKUIQiFKEIdbdQc1s491axNufgSfr4PC9Z2LndPyjUkqNCKEIRilCEIhShCEUoQhGKUIQiFKEIRShCPS1UbNrn3mrOzYM7OndWWvVrjMI5ZWKlcKxia5FEKEIRilCEIhShCEUoQhGKUIQiFKEIRShCXS5UrI+bq8la/WNrGGIDHLvqYhXqkqX7ncvBTSEUoQhFKEIRilCEIhShCEUoQhGKUIQiFKE+LNRcPbfz6LSG4cYKtcXKXGnYKu/mPvfg4BCKUIQiFKEIRShCEYpQhCIUoQhFKEIRilCEGpir2OS0SsMlZdbcIzwwKjFzWwS3vCYUoQhFKEIRilCEIhShCEUoQhGKUIQiFKHeEipWK8yVOztPUsuCnVfOXBG2pLqNVXtztyahCEUoQhGKUIQiFKEIRShCEYpQhCIUoQj1YaHm0JnzK1YLxh6hpXnLoNgTxerm2OXdQpZQhCIUoQhFKEIRilCEIhShCEUoQhGKUIR6WqiDMznXqsSqnys6tZhuc9fVzhPbqoxbjBKKUIQiFKEIRShCEYpQhCIUoQhFKEIRilCEaj9SS6i5UmkJoy2hluxRrKyMWR87k4QiFKEIRShCEYpQhCIUoQhFKEIRilCEIhSh5susVqnUGu+50jA2wHO4z71Vq3CM7eCSPSIUoQhFKEIRilCEIhShCEUoQhGKUIQiFKG+JFTrg35jaX3ng2M2N6LvVbcx3Fu315LpJhShCEUoQhGKUIQiFKEIRShCEYpQhCIUob4k1MHj3hr+vxy7uQ5xbvhjWXJNtnZh5w7W/hwhFKEIRShCEYpQhCIUoQhFKEIRilCEIhShLhNqya68J1Sr+YpVmQdrsthqHNz92A/HDjChCEUoQhGKUIQiFKEIRShCEYpQhCIUoQj1YaGWdD1Lxjt23FuqXmHQ84sT+xqtspJQhCIUoQhFKEIRilCEIhShCEUoQhGKUIS6XKjn27olBVysQ2zBsWS8Y3fbFV0eoQhFKEIRilCEIhShCEUoQhGKUIQiFKEIRaiB7mNuCA9ObOycxUb04DzPreROZeZO3ZLj3SKJUIQiFKEIRShCEYpQhCIUoQhFKEIRilCEItR8XRV7wFh5N/fDO7ueWGUcU3XJahCKUIQiFKEIRShCEYpQhCIUoQhFKEIRilCE+oxQc8duCVhz/dTct4r97pJ67uAOHnz81pVDKEIRilCEIhShCEUoQhGKUIQiFKEIRShCfUmo2DvvHLNWpbikYjs4wFe0V7HOtKU5oQhFKEIRilCEIhShCEUoQhGKUIQiFKEIRagBGuaakdaBjnk9NwwHt3tuy+Y+aO5r7By61lgRilCEIhShCEUoQhGKUIQiFKEIRShCEYpQbwklIkIoESGUiAihREQIJSKEEhEhlIgQSkSEUCIihBIRQomIEEpECCUiQigREUKJCKFERAglIoQSESGUiAihRIRQIiKEEhFCiYgQSkSEUCKyP/8BEx8s6eEexAIAAAAASUVORK5CYII=",
                "payload": "00020101021226820014br.gov.bcb.pix2560qrpix-h.bradesco.com.br/9d36b84f-c70b-478f-b95c-12729b90ca25520400005303986540594.005802BR5905ASAAS6009JOINVILLE62070503***6304F5A8",
                "expirationDate": "2021-06-24 23:59:59"
            }

### Confirmar recebimento em dinheiro [POST /payments/{id}/receiveInCash]

Quando um cliente fizer o pagamento de uma cobrança diretamente para você, sem que esse pagamento seja processado pelo
Asaas, utilize este método para definir a cobrança como recebida em dinheiro. Esta opção serve para manter seu histórico
consistente no sistema, mas não gera saldo ou faz qualquer alteração financeira em sua conta.

Ao confirmar um recebimento em dinheiro de uma cobrança que possua uma recuperação em andamento uma taxa de ativação de serviço de recuperação poderá ser cobrada. Verifique essa taxa no campo `receivedInCashFeeValue` localizada no retorno do [objeto de recuperação](#reference/0/recuperacoes).

+ Parameters
    + id (required) ... Identificador único da cobrança a ser recebida.
    + paymentDate (required) ... Data em que o cliente efetuou o pagamento
    + value (required) ... Valor pago pelo cliente
    + notifyCustomer (boolean) ... Enviar ou não notificação de pagamento confirmado para o cliente

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Body
        {
            "paymentDate": "2019-09-03",
            "value": 100.00,
        }

+ Response 200 (application/json)

    + Attributes (PaymentWithCreditCard)

    + Body

            {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-06-10",
                "value": 100.00,
                "netValue": 94.51,
                "billingType": "BOLETO",
                "status": "RECEIVED_IN_CASH",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "confirmedDate": null,
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": 2017-10-20,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": null,
                "invoiceNumber": "00005101",
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }

### Desfazer confirmação de recebimento em dinheiro [POST /payments/{id}/undoReceivedInCash]

Permite desfazer uma cobrança que foi marcada como [recebida em dinheiro](#reference/0/cobrancas/confirmar-recebimento-em-dinheiro).

+ Parameters
    + id (required) ... Identificador único da cobrança.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Payment)

    + Body

             {
                "object": "payment",
                "id": "pay_080225913252",
                "dateCreated": "2017-03-10",
                "customer": "cus_G7Dvo4iphUNk",
                "paymentLink": null,
                "dueDate": "2017-06-10",
                "value": 100.00,
                "netValue": 95.00,
                "billingType": "BOLETO",
                "status": "PENDING",
                "description": "Pedido 056984",
                "externalReference": "056984",
                "originalValue": null,
                "interestValue": null,
                "originalDueDate": "2017-06-10",
                "paymentDate": null,
                "clientPaymentDate": null,
                "transactionReceiptUrl": null,
                "invoiceUrl": "https://www.asaas.com/i/080225913252",
                "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                "invoiceNumber": "00005101",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false,
                "postalService": false,
                "anticipated": false
            }

## Parcelamentos [/installments]

O identificador único do parcelamento no Asaas pode ser obtido por meio do atributo `installment`, retornado no momento da criação de uma cobrança parcelada.

### Recuperar um único parcelamento [GET /installments/{id}]

Para recuperar um parcelamento específico é necessário que você tenha o ID que o Asaas retornou no momento de sua criação.

###### Recuperar as cobranças de um parcelamento
Caso você queira recuperar as cobranças de um parcelamento você deve utilizar o [Listar Cobranças](#reference/0/cobrancas/listar-cobrancas) da seguinte forma:
`GET https://www.asaas.com/api/v3/payments?installment={installment_id}`

+ Parameters
    + id - Identificador único do parcelamento no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Installment)

    + Body

        {
            "object": "installment",
            "id": "ins_000000001030",
            "value": 360,
            "netValue": 312,12,
            "paymentValue": 30.0,
            "installmentCount": 12,
            "billingType": "CREDIT_CARD",
            "paymentDate": null,
            "description": "Pedido 056984",
            "expirationDay": 31,
            "deleted": false,
            "dateCreated": "2021-01-19",
            "customer": "cus_000000001645",
            "paymentLink": "997152082166122",
            "transactionReceiptUrl": null
        }


### Listar parcelamentos [GET /installments{?offset,limit}]

Diferente da recuperação de um parcelamento específico, este método retorna uma lista paginada com todos seus parcelamentos.

+ Parameters
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "installment",
                    "id": "ins_000000001030",
                    "value": 360,
                    "netValue": 312,12,
                    "paymentValue": 30.0,
                    "installmentCount": 12,
                    "billingType": "CREDIT_CARD",
                    "paymentDate": null,
                    "description": "Pedido 056984",
                    "expirationDay": 31,
                    "deleted": false,
                    "dateCreated": "2021-01-19",
                    "customer": "cus_000000001645",
                    "paymentLink": "997152082166122",
                    "transactionReceiptUrl": null
                },
                {
                    "object": "installment",
                    "id": "ins_000000001029",
                    "value": 480,
                    "netValue": 384,24,
                    "paymentValue": 20.0,
                    "installmentCount": 24,
                    "billingType": "BOLETO",
                    "paymentDate": null,
                    "description": "Pedido 056983",
                    "expirationDay": 10,
                    "deleted": false,
                    "dateCreated": "2020-12-23",
                    "customer": "cus_000000001628",
                    "paymentLink": null,
                    "transactionReceiptUrl": null
                }
            ]
        }

### Remover parcelamento [DELETE /installments/{id}]

Somente é possível remover parcelamentos com cobranças aguardando pagamento ou vencidas e que não possuem processo de antecipação ou de recuperação.

> **Atenção:** Após removido o parcelamento não poderá ser restaurado.

+ Parameters
    + id (required) ... Identificador único do parcelamento a ser removido.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Body

            {
                "deleted": true,
                "id": "ins_000000001029"
            }


### Estornar parcelamento [POST /installments/{id}/refund]

É possível estornar um parcelamento via cartão de crédito recebido ou confirmado. Como já ocorre no processo de estorno de uma cobrança avulsa por cartão de crédito,
o saldo correspondente do parcelamento é debitado de sua conta no Asaas e a cobrança é cancelada no cartão do seu cliente. O cancelamento pode levar até 10 dias úteis para aparecer na fatura de seu cliente.

+ Parameters
    + id (required) ... Identificador único do parcelamento a ser estornado.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (Installment)

    + Body
        {
            "object": "installment",
            "id": "ins_000000001030",
            "value": 360,
            "netValue": 312,12,
            "paymentValue": 30.0,
            "installmentCount": 12,
            "billingType": "CREDIT_CARD",
            "paymentDate": null,
            "description": "Pedido 056984",
            "expirationDay": 31,
            "deleted": false,
            "dateCreated": "2020-12-23",
            "customer": "cus_000000001645",
            "paymentLink": null,
            "transactionReceiptUrl": null
        }

## Assinaturas [/subscriptions]
Assinaturas devem ser utilizadas quando a cobrança é feita periodicamente de forma recorrente, como por exemplo
cobrar o cliente mensalmente pelo uso do seu software, cobrança mensal de aluguéis, etc. Além de mensal é possível
escolher outras periodicidades como trimestral, semestral, entre outras.

Assinaturas são diferentes de cobranças parceladas: ao gerar uma cobrança parcelada, todas as parcelas
são geradas de uma só vez. Já no caso da assinatura, o Asaas gera uma cobrança a cada mês (ou conforme
a periodicidade selecionada) e envia para o cliente.

Outra diferença importante é no uso de cartão de crédito: no caso de parcelamento, o valor total da
soma de todas as parcelas é cobrado no cartão do cliente de uma só vez. No caso de assinaturas, é lançado
mensalmente (ou de acordo com a periodicidade selecionada) uma nova cobrança no cartão do cliente, até
que a assinatura seja removida ou o cartão sendo utilizado se torne inválido (no caso expiração, cancelamento, etc).

### Criar nova assinatura [POST]

Ao criar a assinatura a primeira mensalidade será gerada vencendo na data enviada no parâmetro `nextDueDate`.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewSubscription)

    + Body
            {
                "customer": "{CUSTOMER_ID}",
                "billingType": "BOLETO",
                "nextDueDate": "2017-05-15",
                "value": 19.90,
                "cycle": "MONTHLY",
                "description": "Assinatura Plano Pró",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                }
            }


+ Response 200 (application/json)

    + Attributes (Subscription)

    + Body

            {
                "object": "subscription",
                "id": "sub_VXJBYgP2u0eO",
                "dateCreated": "2017-03-17",
                "customer": "cus_0T1mdomVMi39",
                "paymentLink": null,
                "billingType": "BOLETO",
                "cycle": "MONTHLY",
                "value": 19.9,
                "nextDueDate": "2017-06-15",
                "description": "Assinatura Plano Pró",
                "status": "ACTIVE",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false
            }

### Recuperar uma única assinatura [GET /subscriptions/{id}]

Para recuperar uma assinatura específica é necessário que você tenha o ID
que o Asaas retornou no momento da criação dela.

Para recuperar as cobranças de uma assinatura utilize [Listar cobranças de uma assinatura](#reference/0/assinaturas/listar-cobrancas-de-uma-assinatura)

+ Parameters
    + id - Identificador único da assinatura no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (Subscription)

    + Body

            {
                "object": "subscription",
                "id": "sub_VXJBYgP2u0eO",
                "dateCreated": "2017-03-17",
                "customer": "cus_0T1mdomVMi39",
                "paymentLink": null,
                "billingType": "BOLETO",
                "cycle": "MONTHLY",
                "value": 19.9,
                "nextDueDate": "2017-06-15",
                "description": "Assinatura Plano Pró",
                "status": "ACTIVE",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false
            }

### Listar assinaturas [GET /subscriptions{?customer,billingType,status,subscription,installment,offset,limit,includeDeleted,externalReference}]
Diferente da recuperação de uma assinatura específica, este método retorna
uma lista paginada com todas as assinaturas para os filtros informados.

Listar assinaturas de um cliente específico: `GET https://www.asaas.com/api/v3/subscriptions?customer={customer_id}`

Filtrar por forma de pagamento: `GET https://www.asaas.com/api/v3/subscriptions?billingType=CREDIT_CARD`

+ Parameters
    + customer (optional) - Filtrar pelo Identificador único do cliente
    + billingType (optional, enum) - Filtrar por forma de pagamento
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)
    + includeDeleted (boolean, optional) - True para recuperar também as assinaturas removidas
    + externalReference (optional) - Filtrar pelo Identificador do seu sistema

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)


    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "subscription",
                    "id": "sub_VXJBYgP2u0eO",
                    "dateCreated": "2017-03-17",
                    "customer": "cus_0T1mdomVMi39",
                    "paymentLink": "997152082166484",
                    "billingType": "BOLETO",
                    "cycle": "MONTHLY",
                    "value": 19.9,
                    "nextDueDate": "2017-06-13",
                    "description": "Assinatura Plano Pró",
                    "status": "ACTIVE",
                    "deleted": false
                },
                {
                    "object": "subscription",
                    "id": "sub_jkd83jhd7392j",
                    "dateCreated": "2017-03-17",
                    "customer": "cus_dk29dj327d0kde",
                    "paymentLink": null,
                    "billingType": "CREDIT_CARD",
                    "cycle": "MONTHLY",
                    "value": 15.9,
                    "nextDueDate": "2017-06-13",
                    "description": "Assinatura Plano Basic",
                    "status": "ACTIVE",
                    "deleted": false
                }
            ]
        }

### Listar cobranças de uma assinatura [GET /subscriptions/{id}/payments]

Para listar as cobranças geradas a partir de uma assinatura utilize esse endpoint.

+ Parameters
    + id - Identificador único da assinatura no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "payment",
                    "id": "pay_080225913252",
                    "dateCreated": "2017-03-10",
                    "customer": "cus_G7Dvo4iphUNk",
                    "paymentLink": null,
                    "value": 200.00,
                    "netValue": 195.00,
                    "originalValue": null,
                    "interestValue": null,
                    "description": null,
                    "billingType": "BOLETO",
                    "status": "PENDING",
                    "dueDate": "2017-03-16",
                    "originalDueDate": "2017-03-16",
                    "paymentDate": null,
                    "clientPaymentDate": null,
                    "invoiceUrl": "https://www.asaas.com/i/080225913252",
                    "invoiceNumber": "00005101",
                    "externalReference": null,
                    "deleted": false,
                    "bankSlipUrl": "https://www.asaas.com/b/pdf/080225913252",
                    "postalService": true,
                    "anticipated": false
                },
                {
                    "object": "payment",
                    "id": "pay_961122153955",
                    "dateCreated": "2017-03-08",
                    "customer": "cus_twmWzMzoTYoh",
                    "paymentLink": null,
                    "value": 50.00,
                    "netValue": 45.00,
                    "originalValue": null,
                    "interestValue": null,
                    "description": "Pedido 001387895",
                    "billingType": "CREDIT_CARD",
                    "status": "PENDING",
                    "dueDate": "2017-04-16",
                    "originalDueDate": "2017-04-30",
                    "paymentDate": null,
                    "clientPaymentDate": null,
                    "invoiceUrl": "https://www.asaas.com/i/961122153955",
                    "invoiceNumber": "00005100",
                    "externalReference": null,
                    "deleted": false,
                    "bankSlipUrl": "https://www.asaas.com/b/pdf/961122153955",
                    "postalService": false,
                    "anticipated": false
                }
            ]
        }

### Criar assinatura com cartão de crédito [POST]
Assim como na cobrança, os dados do cartão e do portador podem ser enviados na requisição de criação da
assinatura para que o pagamento já seja processado. A diferença é que no caso da cobrança o cartão
do cliente é cobrado no momento da criação da mesma, já no caso da assinatura, o cartão será validado no momento
da criação, porém a cobrança será feita somente no vencimento da primeira mensalidade. É importante ressaltar
que a validação feita no momento a criação não garante que cobrança ocorrerá com sucesso no vencimento,
pois neste meio-tempo o cartão pode ter sido cancelado, expirado, não ter limite, entre outros.

Para tal, ao executar a requisição de criação da assinatura, basta enviar os dados do cartão de crédito juntamente
com os dados do titular através dos objetos `creditCard` e `creditCardHolderInfo`. Se a transação for autorizada
a assinatura será criada e o Asaas retornará `HTTP 200`. Caso contrário a assinatura não será persistida
e será retornado `HTTP 400`.

Uma vez criada a assinatura com cartão de crédito, a cobrança será feita mensalmente (ou outra periodicidade definida)
no cartão do cliente até que ele se torne inválido ou você remova a assinatura.

> **Atenção:**
> - Caso você opte por capturar na interface do seu sistema os dados do cartão do cliente, é
obrigatório o uso de SSL (HTTPS), caso contrário sua conta pode ser bloqueada para transações via
cartão de crédito.
> - Para se evitar timeouts e decorrentemente duplicidades na captura, recomendamos a configuração de um timeout mínimo de 60 segundos para este request.

##### Tokenização de cartão de crédito
Para utilizar a tokenização de cartão de crédito na criação de assinaturas você deve seguir as mesmas instruções do [Criar cobrança com cartão de crédito](#tokenizacao-de-cartao-de-credito).

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewSubscriptionWithCreditCard)

    + Body
            {
                "customer": "{CUSTOMER_ID}",
                "billingType": "CREDIT_CARD",
                "nextDueDate": "2017-05-15",
                "value": 19.90,
                "cycle": "MONTHLY",
                "description": "Assinatura Plano Pró",
                "creditCard": {
                    "holderName": "marcelo h almeida",
                    "number": "5162306219378829",
                    "expiryMonth": "05",
                    "expiryYear": "2021",
                    "ccv": "318"
                },
                "creditCardHolderInfo": {
                    "name": "Marcelo Henrique Almeida",
                    "email": "marcelo.almeida@gmail.com",
                    "cpfCnpj": "24971563792",
                    "postalCode": "89223-005",
                    "addressNumber": "277",
                    "addressComplement": null,
                    "phone": "4738010919",
                    "mobilePhone": "47998781877"
                },
                "creditCardToken": "a75a1d98-c52d-4a6b-a413-71e00b193c99"
            }



+ Response 200 (application/json)

    + Attributes (SubscriptionWithCreditCard)

    + Body
            {
                "object": "subscription",
                "id": "sub_VXJBYgP2u0eO",
                "dateCreated": "2017-03-13",
                "customer": "cus_0T1mdomVMi39",
                "paymentLink": null,
                "billingType": "CREDIT_CARD",
                "cycle": "MONTHLY",
                "value": 19.9,
                "nextDueDate": "2017-06-15",
                "description": "Assinatura Plano Pró",
                "status": "ACTIVE",
                "deleted": false,
                "creditCard": {
                    "creditCardNumber": "8829",
                    "creditCardBrand": "MASTERCARD",
                    "creditCardToken": "a75a1d98-c52d-4a6b-a413-71e00b193c99"
                }
            }


### Atualizar assinatura existente [POST /subscriptions/{id}]

Ao atualizar uma assinatura, o parâmetro `nextDueDate` serve para indicar o vencimento da próxima mensalidade
**a ser gerada**, ou seja, não atualiza o vencimento da mensalidade já gerada.

Além disso, ao atualizar o valor da assinatura ou forma de pagamento somente serão afetadas mensalidade futuras.
Para atualizar as mensalidades já existentes com a nova forma de pagamento e/ou novo valor, é necessário passar
o parâmetro `updatePendingPayments: true`.

+ Parameters
    + id (required) ... Identificador único da assinatura a ser atualizada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (UpdateSubscription)

    + Body
            {
                "billingType": "BOLETO",
                "nextDueDate": "2017-06-15",
                "value": 29.90,
                "cycle": "MONTHLY",
                "description": "Assinatura Plano Pró",
                "updatePendingPayments": true,
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                }
            }


+ Response 200 (application/json)

    + Attributes (Subscription)

    + Body

            {
                "object": "subscription",
                "id": "sub_VXJBYgP2u0eO",
                "dateCreated": "2017-03-17",
                "customer": "cus_0T1mdomVMi39",
                "paymentLink": null,
                "billingType": "BOLETO",
                "cycle": "MONTHLY",
                "value": 29.9,
                "nextDueDate": "2017-06-15",
                "description": "Assinatura Plano Pró",
                "status": "ACTIVE",
                "discount": {
                    "value": 10.00,
                    "dueDateLimitDays": 0
                },
                "fine": {
                    "value": 1.00
                },
                "interest": {
                    "value": 2.00
                },
                "deleted": false
            }

### Remover assinatura [DELETE /subscriptions/{id}]

Ao remover uma assinatura, as mensalidades aguardando pagamento ou vencidas também são removidas.

+ Parameters
    + id (required) ... Identificador único do assinatura a ser removida.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Body

            {
                "deleted": true,
                "id": "sub_VXJBYgP2u0eO"
            }

### Listar notas fiscais das cobranças de uma assinatura [GET /subscriptions/{id}/invoices{?status,offset,limit}]

Este método retorna uma lista paginada com todas as notas fiscais geradas a partir de cobranças da assinatura informada.

É possível também filtrar o status e período de emissão das notas fiscais, como já apresentado
na [listagem notas fiscais](https://asaasv3.docs.apiary.io/#reference/0/notas-fiscais/listar-notas-fiscais)

+ Parameters
    + id (number, required) - Identificador único do assinatura
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)
    + status (optional) - Status da nota fiscal

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body
        {
            "object": "list",
            "hasMore": true,
            "totalCount": 213,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "invoice",
                    "id": "inv_000000000232",
                    "status": "SCHEDULED",
                    "customer": "cus_000000002750",
                    "type": "NFS-e",
                    "statusDescription": null,
                    "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                    "pdfUrl": null,
                    "xmlUrl": null,
                    "rpsSerie": null,
                    "rpsNumber": null,
                    "number": null,
                    "validationCode": null,
                    "value": 300,
                    "deductions": 10,
                    "effectiveDate": "2018-07-03",
                    "observations": "Mensal referente aos trabalhos de Junho.",
                    "estimatedTaxesDescription": "",
                    "payment": "pay_145059895800",
                    "installment": null,
                    "externalReference": null,
                    "taxes": {
                        "retainIss": false,
                        "iss": 3,
                        "cofins": 3,
                        "csll": 1,
                        "inss": 0,
                        "ir": 1.5,
                        "pis": 0.65
                    },
                    "municipalServiceCode": "1.01",
                    "municipalServiceName": "Análise e desenvolvimento de sistemas"
                },
                {
                    "object": "invoice",
                    "id": "inv_000000000278",
                    "status": "CANCELED",
                    "customer": "cus_000000002758",
                    "type": "NFS-e",
                    "statusDescription": null,
                    "serviceDescription": "teste para descrição de serviço",
                    "pdfUrl": null,
                    "xmlUrl": null,
                    "rpsSerie": null,
                    "rpsNumber": null,
                    "number": null,
                    "validationCode": null,
                    "value": 21,
                    "deductions": 10,
                    "effectiveDate": "2018-06-25",
                    "observations": "nota fiscal de teste",
                    "estimatedTaxesDescription": "",
                    "payment": "pay_637959110194",
                    "installment": null,
                    "externalReference": null,
                    "taxes": {
                        "retainIss": false,
                        "iss": 0,
                        "cofins": 1,
                        "csll": 0,
                        "inss": 1,
                        "ir": 0,
                        "pis": 0
                    },
                    "municipalServiceCode": "1.01",
                    "municipalServiceName": "Análise e desenvolvimento de sistemas"
                }
            ]
        }

### Criar configuração para emissão de Notas Fiscais [POST /subscriptions/{id}/invoiceSettings]

Ao criar uma configuração, o Asaas irá gerar automaticamente as notas fiscais para as cobranças desta assinatura utilizando com base os valores definidos nesta configuração.
As notas serão geradas em conjunto com a criação das cobranças, tendo suas datas de emissão definidas a partir do valor enviado pelo parâmetro `effectiveDatePeriod`.
Caso a assinatura já possua cobranças, apenas serão geradas notas fiscais para as cobranças que se encaixam na configuração definida.

Os períodos de emissão disponíveis são:

`ON_PAYMENT_CONFIRMATION` - Emissão apenas quando cada cobrança for paga.

`ON_PAYMENT_DUE_DATE` - No dia do vencimento de cada cobrança.

`BEFORE_PAYMENT_DUE_DATE` - 5, 10, 15, 30 ou 60 dias antes do vencimento.

`ON_DUE_DATE_MONTH` - No 1º dia do mesmo mês do vencimento de cada cobrança.

`ON_NEXT_MONTH` - No 1º dia do mês seguinte ao mês do vencimento de cada cobrança.

Você pode informar o serviço municipal desejado enviando o identificador único do serviço do seu município por meio do atributo `municipalServiceId`, este pode ser obtido por meio da nossa [seção de serviços municipais](#reference/0/notas-fiscais/listar-servicos-municipais).
Caso a lista de serviços não seja disponibilizada, você deve obtêr o código do serviço municipal desejado manualmente junto a sua prefeitura e envia-lo por meio do atributo `municipalServiceCode`.

> **Atenção:**
> - Caso seja selecionado o período `BEFORE_PAYMENT_DUE_DATE`, também deve ser enviado o parâmetro `daysBeforeDueDate`, que determina quantos dias antes do vencimento será gerado a nota fiscal.
> - Os valores validos para o parâmetro `daysBeforeDueDate` são os inteiros: 5, 10, 15, 30 ou 60.
> - O parâmetro `receivedOnly` é necessário apenas quando utilizado o período `ON_NEXT_MONTH`, caso não enviado será definido como valor padrão `false`.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewSubscriptionInvoiceSettings)

    + Body
        {
            "municipalServiceId": null,
            "municipalServiceCode": "1.01",
            "municipalServiceName": "Análise e desenvolvimento de sistemas",
            "deductions": 55,
            "taxes": {
                "retainIss": true,
                "iss": 1,
                "cofins": 1,
                "csll": 1,
                "inss": 1,
                "ir": 1,
                "pis": 1
            },
            "effectiveDatePeriod": "ON_PAYMENT_CONFIRMATION",
            "daysBeforeDueDate": null,
            "receivedOnly": null,
            "observations": "Referente aos trabalhos de Junho"
        }

+ Response 200 (application/json)

    + Body
        {
            "municipalServiceId": null,
            "municipalServiceCode": "1.01",
            "municipalServiceName": "Análise e desenvolvimento de sistemas",
            "deductions": 55,
            "invoiceCreationPeriod": "ON_PAYMENT_CONFIRMATION",
            "daysBeforeDueDate": null,
            "receivedOnly": null,
            "observations": "Referente aos trabalhos de Junho",
            "taxes": {
                "retainIss": true,
                "cofins": 1,
                "csll": 1,
                "inss": 1,
                "ir": 1,
                "pis": 1,
                "iss": 1
            }
        }

### Atualizar configuração para emissão de Notas Fiscais [POST /subscriptions/{id}/invoiceSettings]

A nova configuração apenas será aplicada nas notas fiscais das próximas cobranças da assinatura, ou as que ainda não possuem uma nota fiscal criada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (UpdateSubscriptionInvoiceSettings)

    + Body
        {
            "deductions": 15,
            "taxes": {
                "retainIss": false,
                "iss": 3,
                "cofins": 1.5,
                "csll": 1,
                "inss": 1,
                "ir": 1,
                "pis": 1
            },
            "effectiveDatePeriod": "ON_PAYMENT_CONFIRMATION",
            "daysBeforeDueDate": null,
            "receivedOnly": null,
            "observations": "Referente aos trabalhos de Março"
        }

+ Response 200 (application/json)

    + Body
        {
            "municipalServiceCode": "1.01",
            "municipalServiceName": "Análise e desenvolvimento de sistemas",
            "deductions": 15,
            "invoiceCreationPeriod": "ON_PAYMENT_CONFIRMATION",
            "daysBeforeDueDate": null,
            "receivedOnly": null,
            "observations": "Referente aos trabalhos de Março",
            "taxes": {
                "retainIss": false,
                "cofins": 1.5,
                "csll": 1,
                "inss": 1,
                "ir": 1,
                "pis": 1,
                "iss": 3
            }
        }

### Recuperar configuração para emissão de Notas Fiscais [GET /subscriptions/{id}/invoiceSettings]

Para recuperar a configuração de emissão de notas fiscais de uma assinatura é necessário
que você tenha criada ela anteriormente e possua o ID da assinatura que o Asaas retornou no momento da criação dela.

+ Parameters
    + id (required) - Identificador único da assinatura no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (UpdateSubscriptionInvoiceSettings)

    + Body
        {
            "municipalServiceCode": "1.01",
            "municipalServiceName": "Análise e desenvolvimento de sistemas",
            "deductions": 15,
            "invoiceCreationPeriod": "ON_PAYMENT_CONFIRMATION",
            "daysBeforeDueDate": null,
            "receivedOnly": null,
            "observations": "Referente aos trabalhos de Março",
            "taxes": {
                "retainIss": false,
                "cofins": 1.5,
                "csll": 1,
                "inss": 1,
                "ir": 1,
                "pis": 1,
                "iss": 1
            }
        }

### Remover configuração para emissão de Notas Fiscais [DELETE /subscriptions/{id}/invoiceSettings]

Ao remover a configuração, todas as notas fiscais **agendadas** para as cobranças desta assinatura serão **canceladas**
e sua geração automática será interrompida.

+ Parameters
    + id (required) ... Identificador único do assinatura.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes
        + deleted (boolean) - Se a remoção foi realizada
        + id - ID da assinatura que a configuração foi removida.

    + Body

            {
                "deleted": true,
                "id": "sub_VXJBYgP2u0eO"
            }

## Link de pagamentos [/paymentLinks]

Permite a manipulação de link de pagamentos da sua conta Asaas.

### Criar um link de pagamentos [POST]

Caso o seu cliente possa pagar via boleto bancário, será necessário informar o campo ``dueDateLimitDays``, que determina a quantidade de dias úteis para a realização do pagamento após a geração do boleto.

Se a forma de cobrança for Parcelamento, informe o campo ``maxInstallmentCount`` para determinar o limite máximo de parcelas que seu cliente poderá escolher para realizar o pagamento parcelado.

Já se a forma de cobrança ser Assinatura, será necessário o envio do campo ``subscriptionCycle`` para determinar a periodicidade da geração das cobranças.

Você poderá adicionar imagens ao seu link de pagamentos por meio [deste endpoint](#reference/0/link-de-pagamentos/adicionar-uma-imagem-a-um-link-de-pagamentos)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewPaymentLink)

    + Body
        {
            "name": "Venda de livros",
            "description": "Qualquer livro por apenas R$: 50,00",
            "endDate": "2021-02-05",
            "value": 50,
            "billingType": "UNDEFINED",
            "chargeType": "DETACHED",
            "dueDateLimitDays": 10,
            "subscriptionCycle": null,
            "maxInstallmentCount": 1,
            "notificationEnabled": true
        }

+ Response 200 (application/json)

    + Body
        {
            "id": "291089675759",
            "name": "Venda de livros",
            "value": 50,
            "active": true,
            "chargeType": "DETACHED",
            "url": "https://www.asaas.com/c/291089675759",
            "billingType": "UNDEFINED",
            "subscriptionCycle": null,
            "description": "Qualquer livro por apenas R$: 50,00",
            "endDate": "2021-02-05",
            "deleted": false,
            "viewCount": 0,
            "maxInstallmentCount": 1,
            "dueDateLimitDays": 10,
            "notificationEnabled": true
        }

### Atualizar um link de pagamentos [PUT /paymentLinks/{id}]

Permite a atualização de um link de pagamentos já existente.

+ Parameters
    + id (required) ... Identificador único do link de pagamento a ser atualizado.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (UpdatePaymentLink)

    + Body
        {
            "name": "Venda de livros digitais",
            "description": "Qualquer livro por apenas R$: 20,00",
            "endDate": "2022-05-05",
            "value": 20,
            "active": true,
            "billingType": "CREDIT_CARD",
            "chargeType": "INSTALLMENT",
            "dueDateLimitDays": 0,
            "subscriptionCycle": null,
            "maxInstallmentCount": 5,
            "notificationEnabled": false
        }

+ Response 200 (application/json)

    + Body
        {
            "id": "291089675759",
            "name": "Venda de livros digitais",
            "value": 20,
            "active": true,
            "chargeType": "INSTALLMENT",
            "url": "https://www.asaas.com/c/291089675759",
            "billingType": "CREDIT_CARD",
            "subscriptionCycle": null,
            "description": "Qualquer livro por apenas R$: 20,00",
            "endDate": "2021-02-05",
            "deleted": false,
            "viewCount": 0,
            "maxInstallmentCount": 5,
            "dueDateLimitDays": 0,
            "notificationEnabled": false
        }

### Recuperar um único link de pagamentos [GET /paymentLinks/{id}]

Para recuperar um link de pagamentos específico é necessário que você tenha o ID que o Asaas retornou no momento da sua criação.

+ Parameters
    + id - Identificador único do link de pagamentos no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (PaymentLink)

    + Body
            {
                "id": "725104409743",
                "name": "Venda de livros",
                "value": 50,
                "active": true,
                "chargeType": "DETACHED",
                "url": "https://www.asaas.com/c/725104409743",
                "billingType": "CREDIT_CARD",
                "subscriptionCycle": null,
                "description": "Qualquer livro por apenas R$: 50,00",
                "endDate": "2021-02-05",
                "deleted": false,
                "viewCount": 0,
                "maxInstallmentCount": 1,
                "dueDateLimitDays": 0,
                "notificationEnabled": false
            }

### Listar link de pagamentos [GET /paymentLinks{?active,includeDeleted,name,offset,limit}]
Diferente da recuperação de um link de pagamentos específico, este método retorna uma lista paginada com todos os link de pagamentos para os filtros informados.

+ Parameters
    + active (boolean, optional) - Filtrar por link de pagamentos ativos ou desativados
    + includeDeleted (boolean, optional) - True para recuperar também os link de pagamento removidos
    + name (optional) - Filtrar pelo nome do link de pagamento
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 1,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "id": "725104409743",
                    "name": "Venda de livros",
                    "value": 50.00,
                    "active": true,
                    "chargeType": "DETACHED",
                    "url": "https://www.asaas.com/c/725104409743",
                    "billingType": "CREDIT_CARD",
                    "subscriptionCycle": null,
                    "description": "Qualquer livro por apenas R$: 50,00",
                    "endDate": "2021-02-05",
                    "deleted": false,
                    "viewCount": 0,
                    "maxInstallmentCount": 1,
                    "dueDateLimitDays": 0,
                    "notificationEnabled": false
                }
            ]
        }

### Remover um link de pagamentos [DELETE /paymentLinks/{id}]

Possibilita a remoção de um link de pagamentos.

+ Parameters
    + id (required) ... Identificador único do link de pagamentos a ser removido.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

            {
                "deleted": true,
                "id": "725104409743"
            }

### Restaurar um link de pagamentos [POST /paymentLinks/{id}/restore]

Possibilita a restauração de um link de pagamentos removido.

+ Parameters
    + id (required) ... Identificador único do link de pagamentos a ser restaurado.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body
        {
            "id": "725104409743",
            "name": "Venda de livros",
            "value": 50,
            "active": true,
            "chargeType": "DETACHED",
            "url": "https://www.asaas.com/c/725104409743",
            "billingType": "CREDIT_CARD",
            "subscriptionCycle": null,
            "description": "Qualquer livro por apenas R$: 50,00",
            "endDate": "2021-02-05",
            "deleted": false,
            "viewCount": 0,
            "maxInstallmentCount": 1,
            "dueDateLimitDays": 0,
            "notificationEnabled": false
        }

### Adicionar uma imagem a um link de pagamentos [POST /paymentLinks/{id}/images]

Permite adicionar imagens ao seu link de pagamentos.

> **Atenção:**
> - Cada link de pagamentos suporta até no máximo 5 imagens.
> - O envio da imagem é feito por meio do ContentType multipart/form-data.

+ Request (multipart/form-data)

    + Headers
        access_token: sua_api_key

    + Body
        main: true
        image: <file>

+ Response 200 (application/json)

    + Body
        {
            "id": "417d1fe7-f530-4368-935f-699045f2bf5d",
            "main": true,
            "image": {
                "originalName": "CodigoDaVinciCover.png",
                "size": 50859,
                "extension": "png",
                "previewUrl": "https://www.asaas.com/file/preview/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg",
                "downloadUrl": "https://www.asaas.com/file/public/download/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg"
            }
        }

### Recuperar uma única imagem do link de pagamentos [GET /paymentLinks/{paymentLinkId}/images/{imageId}]

Para recuperar a imagem de um link de pagamentos específico é necessário que você tenha o ID que o Asaas retornou no momento da criação dele.

+ Parameters
    + paymentLinkId - Identificador único do link de pagamentos no Asaas
    + imageId - Identificador único da imagem do link de pagamentos no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (PaymentLinkImage)

    + Body
            {
                "id": "417d1fe7-f530-4368-935f-699045f2bf5d",
                "main": true,
                "image": {
                    "originalName": "CodigoDaVinciCover.png",
                    "size": 50859,
                    "extension": "png",
                    "previewUrl": "https://www.asaas.com/file/preview/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg",
                    "downloadUrl": "https://www.asaas.com/file/public/download/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg"
                }
            }

### Listar imagens de um link de pagamentos [GET /paymentLinks/{id}/images]

Este método retorna uma lista paginada com todas as imagens do link de pagamentos informado.

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 1,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "id": "417d1fe7-f530-4368-935f-699045f2bf5d",
                    "main": true,
                    "image": {
                        "originalName": "CodigoDaVinciCover.png",
                        "size": 50859,
                        "extension": "png",
                        "previewUrl": "https://www.asaas.com/file/preview/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg",
                        "downloadUrl": "https://www.asaas.com/file/public/download/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg"
                    }
                }
            ]
        }

### Remover uma imagem do link de pagamentos [DELETE /paymentLinks/{id}/images]

Permite a remoção de uma imagem do link de pagamentos.

+ Parameters
    + id (required) ... Identificador único da imagem do link de pagamentos a ser removido.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

            {
                "deleted": true,
                "id": "417d1fe7-f530-4368-935f-699045f2bf5d"
            }

### Definir imagem principal do link de pagamentos [POST /paymentLinks/{paymentLinkId}/images/{imageId}/setAsMain]

Permite a alteração da imagem principal do seu link de pagamentos.

+ Parameters
    + paymentLinkId - Identificador único do link de pagamentos no Asaas
    + imageId - Identificador único da imagem do link de pagamentos no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body
            {
                "id": "417d1fe7-f530-4368-935f-699045f2bf5d",
                "main": true,
                "image": {
                    "originalName": "CodigoDaVinciCover.png",
                    "size": 50859,
                    "extension": "png",
                    "previewUrl": "https://www.asaas.com/file/preview/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg",
                    "downloadUrl": "https://www.asaas.com/file/public/download/XtW5OjqOBy3sskIcEMPj6yhr7T3aCLnSWEbIJd08gMNf3Rk7r5buwAXQ9xC2TNmg"
                }
            }


## Notificações [/notifications]

As notificações são a maneira que o Asaas utiliza para manter você e seu cliente atualizados sobre a
situação das cobranças, notificar recebimento, atraso, modificações, etc. É possível desabilitar todas
as notificações para um determinado cliente utilizando o atributo `notificationDisabled`.

Por padrão, o Asaas cria 7 notificações ao cadastrar um novo cliente, são elas:

#### Aviso de cobrança recebida:

Esta notificação é enviada no momento em que o Asaas registra o recebimento de uma cobrança.

```
    {
        "object": "notification",
        "id": "not_f8JpoWuEjEKd",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": true,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": false,
        "event": "PAYMENT_RECEIVED",
        "scheduleOffset": 0,
        "deleted": false
    }
```

#### Aviso de cobrança vencida:

Esta notificação é enviada no momento em que o Asaas identifica que a cobrança venceu e não foi paga. Para notificações por voz (```phoneCallEnabledForCustomer: true```) cobramos uma taxa de R$ 0,55, e é necessário que o cliente possua um telefone fixo ou móvel cadastrado para ativar esse serviço.

```
    {
        "object": "notification",
        "id": "not_2DMytOpRKux1",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": true,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": true,
        "event": "PAYMENT_OVERDUE",
        "scheduleOffset": 0,
        "deleted": false
    }
```

#### Aviso a cada 7 dias após vencimento:

É enviada a cada 7 dias enquanto a cobrança não for paga. Repare que o `scheduleOffset` desta notificação é 7, enquanto
a anterior é 0. Para notificações por voz (```phoneCallEnabledForCustomer: true```) cobramos uma taxa de R$ 0,55 por ligação, e é necessário que o cliente possua um telefone fixo ou móvel cadastrado para ativar esse serviço.

```
    {
        "object": "notification",
        "id": "not_EDaloT543tss",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": false,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": true,
        "event": "PAYMENT_OVERDUE",
        "scheduleOffset": 7,
        "deleted": false
    }
```

#### Aviso 10 dias antes do vencimento:

Esta notificação é enviada 10 dias antes da data de vencimento da cobrança.

```
    {
        "object": "notification",
        "id": "not_uf8KkANRwUgh",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": false,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": false,
        "event": "PAYMENT_DUEDATE_WARNING",
        "scheduleOffset": 10,
        "deleted": false
    }
```

#### Aviso no dia do vencimento:

Esta notificação é enviada na data em que a cobrança vence.

```
    {
        "object": "notification",
        "id": "not_1igKsZL9xpsl",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": false,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": false,
        "event": "PAYMENT_DUEDATE_WARNING",
        "scheduleOffset": 0,
        "deleted": false
    }
```

#### Aviso de cobrança criada:

Esta notificação é enviada no momento em que a cobrança é criada, exceto para mensalidades geradas automaticamente.

```
    {
        "object": "notification",
        "id": "not_NhHT6M5yUe0C",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": false,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": false,
        "event": "PAYMENT_CREATED",
        "scheduleOffset": 0,
        "deleted": false
    }
```

#### Aviso de cobrança atualizada:

Esta notificação é enviada sempre que alguma cobrança sofre alteração na data de vencimento ou valor.

```
    {
        "object": "notification",
        "id": "not_0YmiEVhOUsyJ",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": false,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": false,
        "event": "PAYMENT_UPDATED",
        "scheduleOffset": 0,
        "deleted": false
    }
```

#### Linha digitável no dia do vencimento:

Esta notificação é enviada na data de vencimento da cobrança caso a fatura ou boleto não tenham sido visualizados
pelo seu cliente.

```
    {
        "object": "notification",
        "id": "not_AWAz6FbrgCPG",
        "customer": "cus_Y4AEif5zrMGK",
        "enabled": true,
        "emailEnabledForProvider": false,
        "smsEnabledForProvider": false,
        "emailEnabledForCustomer": true,
        "smsEnabledForCustomer": true,
        "phoneCallEnabledForCustomer": false,
        "event": "SEND_LINHA_DIGITAVEL",
        "scheduleOffset": 0,
        "deleted": false
    }
```

Para recuperar todas as notificações de um cliente específico utilize:
`GET https://www.asaas.com/api/v3/customers/{customer_id}/notifications`

### Atualizar notificação existente [POST /notifications/{id}]

É possível personalizar qual canal de comunicação utilizar (Email, SMS e voz)
e quem deve receber a notificação (você e/ou seu cliente) utilizando estes atributos:

- enabled: habilita/desabilita a notificação
- emailEnabledForProvider: habilita/desabilita o email enviado para você
- smsEnabledForProvider: habilita/desabilita o SMS enviado para você
- emailEnabledForCustomer: habilita/desabilita o email enviado para o seu cliente
- smsEnabledForCustomer: habilita/desabilita o SMS enviado para o seu cliente
- phoneCallEnabledForCustomer: habilita/desabilita a notificação por voz enviado para o seu cliente

+ Parameters
    + id (required) ... Identificador único da notificação a ser atualizada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (UpdateNotification)

    + Body
            {
                "enabled": true,
                "emailEnabledForProvider": true,
                "smsEnabledForProvider": true,
                "emailEnabledForCustomer": true,
                "smsEnabledForCustomer": true,
                "phoneCallEnabledForCustomer": false
            }

+ Response 200 (application/json)

    + Attributes

    + Body

            {
                "object": "notification",
                "id": "not_f8JpoWuEjEKd",
                "customer": "cus_Y4AEif5zrMGK",
                "enabled": true,
                "emailEnabledForProvider": true,
                "smsEnabledForProvider": true,
                "emailEnabledForCustomer": true,
                "smsEnabledForCustomer": true,
                "phoneCallEnabledForCustomer": false,
                "event": "PAYMENT_RECEIVED",
                "scheduleOffset": 0,
                "deleted": false
            }


## Transferências [/transfers]

Possibilita transferir valores entre contas Asaas ou contas bancárias de outros bancos.

Não é possível transferir valor superior ao saldo da conta Asaas de origem.

O saldo disponível para transferência pode ser consultado com a seguinte requisição:
`GET https://www.asaas.com/api/v3/finance/getCurrentBalance`

A resposta será a seguinte:
```
{
    "totalBalance": 5000.00
}
```

Existem dois tipos de transferências:

`ASAAS_ACCOUNT` - Transferência entre contas Asaas

`BANK_ACCOUNT` - Transferência para conta bancária


### Transferir para conta bancária [POST]

Solicita uma nova transferência para a conta bancária informada.

Após a solicitação a transferência fica pendente até o processamento bancário, que pode ocorrer no mesmo dia ou no próximo dia útil
dependendo do horário da solicitação.


+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewTransfer)

    + Body
            {
                "value": 1000.00,
                "bankAccount": {
                    "bank": {
                        "code": "237"
                    },
                    "accountName": "Conta do Bradesco",
                    "ownerName": "Marcelo Almeida",
                    "ownerBirthDate": "1995-04-12",
                    "cpfCnpj": "52233424611",
                    "agency": "1263",
                    "account": "9999991",
                    "accountDigit": "1",
                    "bankAccountType": "CONTA_CORRENTE",
                }
            }

+ Response 200 (application/json)

    + Attributes (Transfer)

    + Body

        {
            "object": "transfer",
            "id": "777eb7c8-b1a2-4356-8fd8-a1b0644b5282",
            "type": "BANK_ACCOUNT",
            "dateCreated": "2018-01-24",
            "value": 1000,
            "netValue": 1000,
            "status": "PENDING",
            "transferFee": 0,
            "effectiveDate": null,
            "scheduleDate": "2018-01-26",
            "authorized": true,
            "failReason": null,
            "bankAccount": {
                "bank": {
                    "code": "237",
                    "name": "Bradesco"
                },
                "accountName": "Conta do Bradesco",
                "ownerName": "Marcelo Almeida",
                "cpfCnpj": "52233424611",
                "agency": "1263",
                "account": "9999991",
                "accountDigit": "1"
            },
            "transactionReceiptUrl": null
        }

### Transferir para conta Asaas [POST]

Solicita uma nova transferência para uma conta Asaas. É necessário o walletId da conta Asaas de destino retornado no momento da criação da mesma.

Em geral as transferências entre contas Asaas são efetivadas imediatamente, ficando o saldo disponível para uso na conta de destino.

O walletId é retornado na resposta de criação de uma conta Asaas. Caso você não o tenha, é possível recuperá-lo
fazendo a seguinte chamada utilizando a API Key da conta de destino:
`GET https://www.asaas.com/api/v3/wallets`

A resposta será a seguinte:
```
{
    "object": "list",
    "hasMore": false,
    "totalCount": 1,
    "limit": 10,
    "offset": 0,
    "data": [
        {
            "object": "wallet",
            "id": "0000c712-0a0b-a0b0-0000-031e7ac51a2e"
        }
    ]
}
```



+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewInternalTransfer)

    + Body
            {
                "value": 1000.00,
                "walletId": "0021c712-d963-4d86-a59d-031e7ac51a2e"
            }

+ Response 200 (application/json)

    + Attributes (InternalTransfer)

    + Body

        {
            "object": "transfer",
            "id": "9e7d8639-350f-45c0-8bc3-d4ddc5f4ebac",
            "type": "ASAAS_ACCOUNT",
            "dateCreated": "2018-01-24",
            "value": 1000,
            "status": "DONE",
            "transferFee": 0,
            "effectiveDate": "2018-01-24",
            "scheduleDate": "2018-01-24",
            "authorized": true,
            "walletId": "0021c712-d963-4d86-a59d-031e7ac51a2e",
            "account": {
                "name": "João Almeida",
                "cpfCnpj": "45234767051"
            },
            "transactionReceiptUrl": "https://www.asaas.com/comprovantes/8595088807941204"
        }


### Recuperar uma única transferência [GET /transfers/{id}]
Para recuperar uma transferência específica é necessário que você tenha o ID que o Asaas retornou no momento da sua criação.

+ Parameters
    + id - Identificador único da transferência no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Transfer)

    + Body
    {
        "object": "transfer",
        "id": "777eb7c8-b1a2-4356-8fd8-a1b0644b5282",
        "dateCreated": "2019-05-02",
        "status": "PENDING",
        "effectiveDate": null,
        "type": "BANK_ACCOUNT",
        "value": 1000,
        "netValue": 1000,
        "transferFee": 0,
        "scheduleDate": "2019-05-02",
        "authorized": true,
        "failReason": null,
        "bankAccount": {
            "bank": {
                "code": "001",
                "name": "Banco do Brasil"
            },
            "accountName": "Conta Banco do Brasil",
            "ownerName": "Marcelo Almeida",
            "cpfCnpj": "52233424611",
            "agency": "1263",
            "agencyDigit": "3",
            "account": "9999991",
            "accountDigit": "1"
        },
        "transactionReceiptUrl": null
    }


### Listar transferências [GET /transfers{?dateCreated,type}]
Este método retorna uma lista paginada com todas as transferências para o filtro informado.

##### Exemplo de filtro

Filtrar por data de criação: `GET https://www.asaas.com/api/v3/transfers?dateCreated=2019-05-02`

+ Parameters
    + dateCreated (optional) - Filtrar pela data de criação
    + type (enum, optional) - Filtrar por tipo da transferência
        + Members
            + ASAAS_ACCOUNT
            + BANK_ACCOUNT

+ Request
    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)


    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "transfer",
                    "id": "777eb7c8-b1a2-4356-8fd8-a1b0644b5282",
                    "dateCreated": "2019-05-02",
                    "status": "PENDING",
                    "effectiveDate": null,
                    "type": "BANK_ACCOUNT",
                    "value": 1000,
                    "netValue": 1000,
                    "transferFee": 0,
                    "scheduleDate": "2019-05-02",
                    "authorized": true,
                    "failReason": null,
                    "bankAccount": {
                        "bank": {
                            "code": "001",
                            "name": "Banco do Brasil"
                        },
                        "accountName": "Conta Banco do Brasil",
                        "ownerName": "Marcelo Almeida",
                        "cpfCnpj": "52233424611",
                        "agency": "1263",
                        "agencyDigit": "3",
                        "account": "9999991",
                        "accountDigit": "1"
                    },
                    "transactionReceiptUrl": null
                },
                {
                    "object": "transfer",
                    "id": "9e7d8639-350f-45c0-8bc3-d4ddc5f4ebac",
                    "dateCreated": "2019-05-02",
                    "status": "DONE",
                    "effectiveDate": "2019-05-02",
                    "type": "ASAAS_ACCOUNT",
                    "value": 1000,
                    "transferFee": 0,
                    "scheduleDate": "2019-05-02",
                    "authorized": true,
                    "failReason": null,
                    "walletId": "0021c712-d963-4d86-a59d-031e7ac51a2e",
                    "account": {
                        "name": "João Almeida",
                        "cpfCnpj": "45234767051"
                    },
                    "transactionReceiptUrl": "https://www.asaas.com/comprovantes/8595088807941204"
                }
            ]
        }

## Antecipações [/anticipations]

### Solicitar antecipação [POST /anticipations]

Possibilita solicitar uma antecipação. Para que seja possível criar uma antecipação, antes é necessário entrar em contato com o seu gerente de conta Asaas e solicitar a permissão de criação de antecipação via API.

É possível solicitar uma antecipação de um parcelamento ou de uma cobrança avulsa.
Em casos de parcelamento, onde a forma de pagamento é por cartão, a antecipação será para o parcelamento completo, e quando a forma de pagamento é por boleto, a antecipação será para cada parcela individualmente.

Para solicitar uma antecipação de cobrança avulsa, informe o ID da cobrança para o campo `payment`.
Para solicitar uma antecipação de parcelamentos, informe o ID do parcelamento para o campo `installment`.

Para determinar se o envio de notas fiscais eletrônicas ou contratos de prestação de serviços é obrigatório, verifique a propriedade `isDocumentationRequired` retornada na [simulação da antecipação](#reference/0/antecipacoes/simular-antecipacao).

+ Request (multipart/form-data)

    + Headers
        access_token: sua_api_key

    + Attributes (NewReceivableAnticipation)

    + Body

            {
                "agreementSignature": "João Almeida",
                "installment": null,
                "payment": "pay_626366773834",
                "documents": [<file>]
            }

+ Response 200 (application/json)

    + Attributes (ReceivableAnticipation)

    + Body

            {
                "object": "receivableAnticipation",
                "id": "9e7d8639-350f-45c0-8bc3-d4ddc5f4ebac",
                "installment": null,
                "payment": "pay_626366773834",
                "status": "PENDING",
                "anticipationDate": "2019-05-20",
                "dueDate": "2019-05-26",
                "requestDate": "2019-05-14",
                "fee": "2.33",
                "anticipationDays": "6",
                "netValue": "73.68",
                "totalValue": "80.00",
                "value": "76.01",
                "denialObservation": null
            }

### Simular antecipação [POST /anticipations/simulate]

Possibilita simular uma antecipação para cobranças de cartão de crédito.
É possível simular o valor das taxas a serem cobradas e o valor que será antecipado.

Para solicitar uma simulação de antecipação de cobrança avulsa, informe o ID da cobrança para o campo `payment`.
Para solicitar uma simulação de antecipação de parcelamentos, informe o ID do parcelamento para o campo `installment`.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewSimulateReceivableAnticipation)

    + Body

            {
                "installment": null,
                "payment": "pay_626366773834"
            }

+ Response 200 (application/json)

    + Attributes (SimulateReceivableAnticipation)

    + Body

            {
                "installment": null,
                "payment": "pay_626366773834",
                "anticipationDate": "2019-05-20",
                "dueDate": "2019-05-26",
                "fee": "2.33",
                "anticipationDays": "6",
                "netValue": "73.68",
                "totalValue": "80.00",
                "value": "76.01",
                "isDocumentationRequired": false
            }

### Recuperar uma única antecipação [GET /anticipations/{id}]

Para recuperar uma antecipação é necessário que você tenha o ID que o Asaas retornou no momento da solicitação.

+ Parameters
    + id - Identificador único da antecipação no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Body

            {
                "object": "receivableAnticipation",
                "id": "9e7d8639-350f-45c0-8bc3-d4ddc5f4ebac",
                "installment": null,
                "payment": "pay_626366773834",
                "status": "PENDING",
                "anticipationDate": "2019-05-20",
                "dueDate": "2019-05-26",
                "requestDate": "2019-05-14",
                "fee": "2.33",
                "anticipationDays": "6",
                "netValue": "73.68",
                "totalValue": "80.00",
                "value": "76.01",
                "denialObservation": null
            }

### Listar antecipações [GET /anticipations{?payment,installment,status,offset,limit}]

Diferente da recuperação de uma antecipação específica, este método retorna uma lista paginada com todos as antecipações para o filtro informado.

Filtrar por status: `GET https://www.asaas.com/api/v3/anticipations?status=PENDING`

+ Parameters
    + payment (optional) - Filtrar antecipações de uma cobrança
    + installment (optional) - Filtrar antecipações de um parcelamento
    + status (optional) - Filtrar por status
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "receivableAnticipation",
                    "id": "9e7d8639-350f-45c0-8bc3-d4ddc5f4ebac",
                    "installment": null,
                    "payment": "pay_626366773834",
                    "status": "PENDING",
                    "anticipationDate": "2019-05-20",
                    "dueDate": "2019-05-26",
                    "requestDate": "2019-05-14",
                    "fee": "2.33",
                    "anticipationDays": "6",
                    "netValue": "73.68",
                    "totalValue": "80.00",
                    "value": "76.01",
                    "denialObservation": null
                },
                {
                    "object": "receivableAnticipation",
                    "id": "777eb7c8-b1a2-4356-8fd8-a1b0644b5282",
                    "installment": "ins_000094261907",
                    "payment": null,
                    "status": "APPROVED",
                    "anticipationDate": "2019-05-21",
                    "dueDate": "2019-05-27",
                    "requestDate": "2019-04-08",
                    "fee": "3.33",
                    "anticipationDays": "6",
                    "netValue": "92.68",
                    "totalValue": "100.00",
                    "value": "96.01",
                    "denialObservation": null
                }
            ]
        }

## Recuperações [/paymentDunnings]

Possibilita a manipulação de recuperação de cobranças da sua conta Asaas.

Os tipos de recuperação disponíveis são:

- `CREDIT_BUREAU` - Negativação via Serasa.

### Criar uma recuperação [POST]

Possibilita criar uma recuperação a partir de uma cobrança. Para que seja possível criar uma recuperação, antes é necessário entrar em contato com o seu gerente de conta Asaas e solicitar a permissão de criar recuperações via API.

+ Request (multipart/form-data)

    + Headers
        access_token: sua_api_key

    + Attributes (NewDunning)
    + Body
        {
            "payment": "pay_080225913252",
            "description": "Duas mesas com 8 cadeiras solicitadas via encomenda no dia 01/05/2019",
            "customerName": "Marcelo Almeida",
            "customerCpfCnpj": "24971563792",
            "customerPrimaryPhone": "4738010919",
            "customerSecondaryPhone": "4732026941",
            "customerPostalCode": "01310-000",
            "customerAddress": "Av. Paulista",
            "customerAddressNumber": "150",
            "customerProvince": "Centro",
            "customerComplement": "Sala 201",
            "type": "CREDIT_BUREAU",
            "documents": [<files>]
        }

+ Response 200 (application/json)

    + Attributes (Dunning)

    + Body
           {
                "id": "ce35702d-0d9f-475a-ba46-e251ad265c91",
                "dunningNumber": 186,
                "status": "PENDING",
                "type": "CREDIT_BUREAU",
                "requestDate": "2020-05-26",
                "description": "Duas mesas com 8 cadeiras solicitadas via encomenda no dia 01/05/2018",
                "value": 80.0,
                "feeValue": 8.00,
                "netValue": 72.00,
                "receivedInCashFeeValue": 0,
                "denialReason": null,
                "cancellationFeeValue": 0,
                "canBeCancelled": true,
                "isNecessaryResendDocumentation": false,
                "payment": "pay_080225913252"
            }


### Simular uma recuperação [POST /paymentDunnings/simulate]

Possibilita a simulação da taxa cobrada, valor a ser recuperado e data prevista de início da recuperação.

+ Request (multipart/form-data)

    + Headers
        access_token: sua_api_key

    + Attributes (RequestDunningSimulation)
    + Body
        {
            "payment": "pay_080225913252"
        }

+ Response 200 (application/json)

    + Attributes (DunningSimulation)

    + Body
           {
                "payment": "pay_677446119167",
                "value": 50,
                "typeSimulations": [
                    {
                        "type": "CREDIT_BUREAU",
                        "isAllowed": false,
                        "notAllowedReason": "A negativação via Serasa não está disponível para parcelamentos de cartão de crédito.",
                        "feeValue": 0,
                        "netValue": 0,
                        "startDate": null
                    }
                ]
            }


### Recuperar uma única recuperação [GET /paymentDunnings/{id}]

Para recuperar uma recuperação específica é necessário que você tenha o ID que o Asaas retornou no momento da sua criação.

+ Parameters
    + id - Identificador único da recuperação no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Dunning)
    + Body

            {
                "id": "ce35702d-0d9f-475a-ba46-e251ad265c91",
                "dunningNumber": 186,
                "status": "PENDING",
                "type": "CREDIT_BUREAU",
                "requestDate": "2020-05-26",
                "description": "Duas mesas com 8 cadeiras solicitadas via encomenda no dia 01/05/2018",
                "value": 80.0,
                "feeValue": 8.00,
                "netValue": 72.00,
                "receivedInCashFeeValue": 0,
                "denialReason": null,
                "cancellationFeeValue": 0,
                "canBeCancelled": true,
                "isNecessaryResendDocumentation": false,
                "payment": "pay_080225913252"
            }

### Listar recuperações [GET /paymentDunnings{?status,type,payment,requestStartDate,requestEndDate,offset,limit}]

Diferente da recuperação de uma recuperação específica, este método retorna uma lista paginada com todas as recuperações da conta.

+ Parameters
    + status (optional) - Status da recuperação
    + type (optional) - Tipo de recuperação
    + payment (optional) - Filtrar por recuperações de uma determinada cobrança
    + requestStartDate (optional) - Filtrar a partir da data de solicitação inicial
    + requestEndDate (optional) - Filtrar a partir da data de solicitação final
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 3,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "id": "ce35702d-0d9f-475a-ba46-e251ad265c91",
                    "dunningNumber": 186,
                    "status": "PENDING",
                    "type": "CREDIT_BUREAU",
                    "requestDate": "2020-05-26",
                    "description": "Duas mesas com 8 cadeiras solicitadas via encomenda no dia 01/05/2018",
                    "value": 80.0,
                    "feeValue": 8.00,
                    "netValue": 72.00,
                    "receivedInCashFeeValue": 0,
                    "denialReason": null,
                    "cancellationFeeValue": 0,
                    "canBeCancelled": true,
                    "isNecessaryResendDocumentation": false,
                    "payment": "pay_080225913252"
                },
                {
                    "id": "94921e3c-d91f-4c97-bc54-1b1575f21c2a",
                    "dunningNumber": 235,
                    "status": "PROCESSED",
                    "type": "CREDIT_BUREAU",
                    "requestDate": "2020-04-15",
                    "description": "Serviços de marcenaria",
                    "value": 90.00,
                    "feeValue": 9.90,
                    "netValue": 80.10,
                    "receivedInCashFeeValue": 0,
                    "denialReason": null,
                    "cancellationFeeValue": 0,
                    "canBeCancelled": true,
                    "isNecessaryResendDocumentation": false,
                    "payment": "pay_335344380370"
                },
                {
                    "id": "4e3165f7-97df-46b9-a483-beb594de46cc",
                    "dunningNumber": 391,
                    "status": "DENIED",
                    "type": "CREDIT_BUREAU",
                    "requestDate": "2020-04-24",
                    "description": "Serviços de marcenaria",
                    "value": 50.00,
                    "feeValue": 5.00,
                    "netValue": 45.00,
                    "receivedInCashFeeValue": 0,
                    "denialReason": "Nota fiscal ilegível",
                    "cancellationFeeValue": 0,
                    "canBeCancelled": false,
                    "isNecessaryResendDocumentation": true,
                    "payment": "pay_410158086579"
                }
            ]
        }

### Listar histórico de eventos [GET /paymentDunnings/{id}/history{?offset,limit}]

Retorna uma lista paginada com os eventos que ocorreram desde do início da recuperação da cobrança.

+ Parameters
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

       {
            "object": "list",
            "hasMore": false,
            "totalCount": 4,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "status": "NEGOTIATED",
                    "description": "Recuperação negociada com o cliente. O pagamento será iniciado.",
                    "eventDate": "2019-02-20"
                },
                {
                    "status": "IN_NEGOTIATION",
                    "description": "As propostas para renegociação da dívida foram apresentadas ao cliente.",
                    "eventDate": "2019-02-08"
                },
                {
                    "status": "IN_NEGOTIATION",
                    "description": "Não foi possível entrar em contato com o cliente. Tentaremos contato novamente.",
                    "eventDate": "2019-02-03"
                },
                {
                    "status": "IN_NEGOTIATION",
                    "description": "Em negociação com o cliente.",
                    "eventDate": "2019-02-01"
                }
            ]
        }

### Listar pagamentos recebidos [GET /paymentDunnings/{id}/partialPayments{?offset,limit}]

Retorna uma lista paginada com os pagamentos recebidos por meio da renegociação da dívida.

+ Parameters
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

       {
            "object": "list",
            "hasMore": false,
            "totalCount": 3,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "value": 800.00,
                    "description": "A quitação desta cobrança foi efetuada pelo cliente.",
                    "paymentDate": "2020-02-10"
                },
                {
                    "value": 800.00,
                    "description": "Pagamento parcial efetuado pelo cliente. Há pagamentos pendentes para a quitação dessa cobrança.",
                    "paymentDate": "2020-01-10"
                },
                {
                    "value": 800.00,
                    "description": "Pagamento parcial efetuado pelo cliente. Há pagamentos pendentes para a quitação dessa cobrança.",
                    "paymentDate": "2019-12-10"
                }
            ]
        }

### Listar cobranças disponíveis para recuperação [GET /paymentDunnings/paymentsAvailableForDunning{?offset,limit}]

Retorna uma lista paginada de cobranças possíveis de recuperação em conjunto com uma simulação de valores para cada tipo de recuperação.

+ Parameters
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

       {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "payment": "pay_856437540297",
                    "customer": "cus_000000001663",
                    "value": 50,
                    "status": "OVERDUE",
                    "billingType": "BOLETO",
                    "dueDate": "2020-05-18",
                    "typeSimulations": [
                        {
                            "type": "CREDIT_BUREAU",
                            "isAllowed": true,
                            "notAllowedReason": null,
                            "feeValue": 0,
                            "netValue": 50.00,
                            "startDate": "2020-05-27"
                        }
                    ]
                },
                {
                    "payment": "pay_677446119167",
                    "customer": "cus_000000001645",
                    "value": 50,
                    "status": "OVERDUE",
                    "billingType": "CREDIT_CARD",
                    "dueDate": "2020-05-19",
                    "typeSimulations": [
                        {
                            "type": "CREDIT_BUREAU",
                            "isAllowed": false,
                            "notAllowedReason": "A negativação via Serasa não está disponível para parcelamentos de cartão de crédito.",
                            "feeValue": 0,
                            "netValue": 0,
                            "startDate": null
                        }
                    ]
                }
            ]
        }

### Reenviar documentos [POST /paymentDunnings/{id}/documents]

Permite o reenvio dos documentos de uma recuperação em caso de negação. Utilize a propriedade ``isNecessaryResendDocumentation`` retornado no objeto de recuperação para verificar se é preciso o reenvio da documentação.

Após o reenvio sua recuperação retornará para o status de ``AWAITING_APPROVAL``.

+ Parameters
    + id - Identificador único da recuperação no Asaas

+ Request (multipart/form-data)

    + Headers
        access_token: sua_api_key

    + Body
        {
            "documents": [<files>]
        }

+ Response 200 (application/json)

    + Attributes (Dunning)

    + Body
           {
                "id": "4e3165f7-97df-46b9-a483-beb594de46cc",
                "dunningNumber": 391,
                "status": "AWAITING_APPROVAL",
                "type": "CREDIT_BUREAU",
                "requestDate": "2020-04-24",
                "description": "Serviços de marcenaria",
                "value": 50.00,
                "feeValue": 5.00,
                "netValue": 45.00,
                "receivedInCashFeeValue": 0,
                "denialReason": null,
                "cancellationFeeValue": 0,
                "canBeCancelled": false,
                "isNecessaryResendDocumentation": false,
                "payment": "pay_410158086579"
            }

### Cancelar recuperação [POST /paymentDunnings/{id}/cancel]

Permite o cancelamento de uma recuperação. Utilize a propriedade ``canBeCancelled`` retornado no objeto de recuperação para verificar se a recuperação pode ser cancelada.

Caso a recuperação já tenha sido iniciada, ao solicitar o cancelamento a recuperação ficará com o status de ``AWAITING_CANCELLATION`` até que seja efetivamente cancelada (``CANCELLED``).

+ Parameters
    + id (required) - Identificador único da recuperação a ser cancelada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Dunning)
    + Body
            {
                "id": "df455204-858d-11ea-84ac-0242ac120002",
                "dunningNumber": 116,
                "status": "AWAITING_CANCELLATION",
                "type": "CREDIT_BUREAU",
                "requestDate": "2019-05-16",
                "description": "Móveis planejados",
                "value": 500.00,
                "feeValue": 100.00,
                "netValue": 400.00,
                "receivedInCashFeeValue": 0,
                "denialReason": null,
                "cancellationFeeValue": 0,
                "isNecessaryResendDocumentation": false,
                "canBeCancelled": false,
                "payment": "pay_377310259782"
            }

## Pagamento de contas [/bill]

### Criar um pagamento de conta [POST /bill]

Permite criar um pagamento de conta por meio da linha digitável do boleto.

Para agendar seu pagamento de conta, informe o campo ``scheduleDate`` com a data desejada para pagamento. Ao escolher um dia não útil, o pagamento será realizado no próximo dia útil. Caso não informado, o pagamento irá ocorrer no dia de vencimento do boleto.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


    + Attributes (NewBill)
    + Body
            {
                "identificationField": "03399.77779 29900.000000 04751.101017 1 81510000002990",
                "scheduleDate": "2020-03-15",
                "description": "Celular 03/12",
                "discount": 2.00,
                "dueDate": "2020-03-30",
                "value": 98.00
            }

+ Response 200 (application/json)

    + Attributes (Bill)

    + Body
            {
                    "object": "bill",
                    "id": "7f0fb6ac-167c-4732-adee-61801209e26a",
                    "status": "PENDING",
                    "value": 98.00,
                    "discount": 2.00,
                    "identificationField": "03399.77779 29900.000000 04751.101017 1 81510000002990",
                    "dueDate": "2020-04-20",
                    "scheduleDate": "2020-03-15",
                    "paymentDate": null,
                    "fee": 0.00,
                    "description": "Celular 03/12",
                    "companyName": null,
                    "transactionReceiptUrl": "https://www.asaas.com/comprovantes/00044645",
                    "canBeCancelled": false,
                    "failReasons": null
                }

### Simular um pagamento de conta [POST /bill/simulate]

Permite a simulação de um pagamento de conta por meio da linha digitável ou código de barras do boleto.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (RequestBillSimulation)

    + Body
        {
            "identificationField": "03399.20159 51005.290401 47600.301023 8 88440000421177",
            "barCode": "03398884400004211779201551005290404760030102"
        }

+ Response 200 (application/json)

    + Attributes (BillSimulation)

    + Body
            {
                "minimumScheduleDate": "2021-11-22",
                "fee": 0,
                "bankSlipInfo": {
                    "identificationField": "03399201595100529040147600301023888440000421177",
                    "value": 4211.77,
                    "dueDate": "2021-12-24",
                    "companyName": null,
                    "bank": "033",
                    "beneficiaryCpfCnpj": "19.540.550/0001-21",
                    "beneficiaryName": "ASAAS GESTAO FINANCEIRA S.A.",
                    "allowChangeValue": false,
                    "minValue": 4211.77,
                    "maxValue": 4211.77,
                    "discountValue": 0.0,
                    "interestValue": 0.0,
                    "fineValue": 0.0,
                    "originalValue": 4211.77,
                    "totalDiscountValue": 0.0,
                    "totalAdditionalValue": 0.0
                }
            }

### Recuperar um único pagamento de conta [GET /bill/{id}]

Para recuperar um pagamento de conta específico é necessário que você tenha o ID que o Asaas retornou no momento da sua criação.

+ Parameters
    + id - Identificador único do pagamento de conta no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Bill)
    + Body

            {
                "object": "bill",
                "id": "f1bce822-6f37-4905-8de8-f1af9f2f4bab",
                "status": "PENDING",
                "value": 29.90,
                "discount": 0.00,
                "identificationField": "03399.77779 29900.000000 04751.101017 1 81510000002990",
                "dueDate": "2020-01-31",
                "scheduleDate": "2020-01-31",
                "paymentDate": null,
                "fee": 0.00,
                "description": "Celular 01/12",
                "companyName": null,
                "transactionReceiptUrl": "https://www.asaas.com/comprovantes/00016578",
                "canBeCancelled": false,
                "failReasons": null
            }

### Listar pagamento de contas [GET /bill{?offset,limit}]

Diferente da recuperação de um pagamento de conta específico, este método retorna uma lista paginada com todos os pagamentos de conta.

+ Parameters
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "bill",
                    "id": "f1bce822-6f37-4905-8de8-f1af9f2f4bab",
                    "status": "PENDING",
                    "value": 29.90,
                    "discount": 0.00,
                    "identificationField": "03399.77779 29900.000000 04751.101017 1 81510000002990",
                    "dueDate": "2020-01-31",
                    "scheduleDate": "2020-01-31",
                    "paymentDate": null,
                    "fee": 0.00,
                    "description": "Celular 01/12",
                    "companyName": null,
                    "transactionReceiptUrl": "https://www.asaas.com/comprovantes/00016578",
                    "canBeCancelled": false,
                    "failReasons": null
                },
                {
                    "object": "bill",
                    "id": "7f0fb6ac-167c-4732-adee-6180b109e26a",
                    "status": "FAILED",
                    "value": 29.90,
                    "discount": 3.00,
                    "identificationField": "03399.77779 29900.000000 04751.101017 1 81510000002990",
                    "dueDate": "2020-02-31",
                    "scheduleDate": "2020-02-31",
                    "paymentDate": null,
                    "fee": 0.00,
                    "description": "Celular 02/12",
                    "companyName": null,
                    "transactionReceiptUrl": null,
                    "canBeCancelled": false,
                    "failReasons": [
                        "Boleto já liquidado"
                    ]
                }
            ]
        }

### Cancelar pagamento de contas [POST /bill/{id}/cancel]

Permite o cancelamento do pagamento de conta. Utilize a propriedade ``canBeCancelled`` do objeto ``bill`` para verificar se o pagamento de conta pode ser cancelado.

Ao ser cancelado o pagamento da conta não será realizado.

+ Parameters
    + id (required) - Identificador único do pagamento de conta a ser cancelado.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Attributes (Bill)
    + Body
            {
                "object": "bill",
                "id": "f1bce822-6f37-4905-8de8-f1af9f2f4bab",
                "status": "CANCELLED",
                "value": 29.90,
                "discount": 0.00,
                "identificationField": "03399.77779 29900.000000 04751.101017 1 81510000002990",
                "dueDate": "2020-01-31",
                "scheduleDate": "2020-01-31",
                "paymentDate": null,
                "fee": 0.00,
                "description": "Celular 01/12",
                "companyName": null,
                "transactionReceiptUrl": "https://www.asaas.com/comprovantes/00016578",
                "canBeCancelled": false,
                "failReasons": null
            }


## Consulta Serasa [/creditBureauReport]

Possibilita você consultar a saúde financeira dos seus atuais e futuros clientes por meio do Serasa Experian. Para que seja possível a solicitação de uma consulta, antes é necessário entrar em contato com o seu gerente de contas Asaas e solicitar a permissão de consultar clientes no Serasa Experian via API.

> **Atenção:**
> - A url de download do PDF da consulta ficará disponível apenas até as 23:59 do mesmo dia.
> - A cada consulta um email será enviado para o email cadastrado na conta Asaas contendo o PDF da consulta.

### Realizar Consulta [POST]

As consultas junto ao Serasa Experian são realizadas no momento da solicitação, para evitar possíveis percas de conexão, sugerimos um timeout de **30 segundos** ou mais.

Ao realizar a consulta será retornado o atributo ``reportFile`` contendo o PDF da consulta em Base64, este campo apenas é retornado no momento da criação da consulta, caso precise obte-lo novamente será necessário realizar o download por meio da url presente no campo ``downloadUrl``.

Para realizar a consulta você terá que informar um CPF ou CNPJ e o estado onde deseja realizar a consulta.

Caso queira informar um cliente já cadastrado na sua conta Asaas:
- Este deverá possuir um CPF ou CNPJ já cadastrado
- O envio do estado se torna opcional caso já conste no cadastro do cliente

+ Request (application/json)

    + Headers

            access_token: sua_api_key

    + Attributes (NewCreditBureauReport)

    + Body

            {
                "customer": "cus_000000002750",
                "cpfCnpj": null,
                "state": "SC"
            }

+ Response 200 (application/json)

    + Attributes (CreditBureauReport)

    + Body
            {
                "id": "6c5e73fa-9efd-4a75-b60c-1cafb8d1c7ed",
                "dateCreated": "2021-01-27",
                "cpfCnpj": "05666663755",
                "state": "SC",
                "customer": "cus_000000001766",
                "downloadUrl": "https://www.asaas.com.br/creditBureauReport/download/6c5e73fa-9efd-4a75-b60c-1cafb8d1c7ed"
            }

### Recuperar uma consulta [GET /creditBureauReport/{id}]

Para recuperar uma consulta específica é necessário que você tenha o ID que o Asaas retornou no momento da criação dela.

+ Parameters
    + id - Identificador único da consulta no Asaas

+ Request (application/json)

    + Headers

            access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (CreditBureauReport)

    + Body

            {
                "id": "6c5e73fa-9efd-4a75-b60c-1cafb8d1c7ed",
                "dateCreated": "2021-01-27",
                "cpfCnpj": "05666663755",
                "state": "SC",
                "customer": "cus_000000001766",
                "downloadUrl": "https://www.asaas.com.br/creditBureauReport/download/6c5e73fa-9efd-4a75-b60c-1cafb8d1c7ed"
            }

### Listar consultas [GET /creditBureauReport{?startDate,endDate,offset,limit}]

Diferente da recuperação de uma consulta específica, este método retorna uma lista paginada com todas as consultas para os filtros informados.

+ Parameters
    + startDate (optional) - Filtrar a partir da data de criação
    + endDate (optional) - Filtrar até uma data de criação
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Body

            {
                "object": "list",
                "hasMore": false,
                "totalCount": 1,
                "limit": 10,
                "offset": 0,
                "data": [
                    {
                        "id": "6c5e73fa-9efd-4a75-b60c-1cafb8d1c7ed",
                        "dateCreated": "2021-01-27",
                        "cpfCnpj": "05666663755",
                        "state": "SC",
                        "customer": "cus_000000001766",
                        "downloadUrl": "https://www.asaas.com.br/creditBureauReport/download/6c5e73fa-9efd-4a75-b60c-1cafb8d1c7ed"
                    }
                ]
            }


## Extrato [/financialTransactions]

### Recuperar extrato [GET /financialTransactions]

Retorna uma lista de movimentações financeiras no período informado nos parâmetros.

Junto de cada movimentação financeira é retornado, se disponível, o Id do objeto de origem da transação. Os Ids possíveis são:

`PaymentId`: [Cobrança](#reference/0/cobrancas/recuperar-uma-unica-cobranca).

`transferId`: [Transferência](#reference/0/transferencias/recuperar-uma-unica-transferencia).

`anticipationId`: [Antecipação](#reference/0/antecipacoes/recuperar-uma-unica-antecipacao).

`billId`: [Pagamento de contas](#reference/0/pagamento-de-contas/recuperar-um-unico-pagamento-de-conta).

`invoiceId`: [Nota fiscal](#reference/0/notas-fiscais/recuperar-uma-nota-fiscal).

`paymentDunningId`: [Recuperação de recebíveis](#reference/0/recuperacoes/recuperar-uma-unica-recuperacao).

`creditBureauReportId`: [Consulta Serasa](#reference/0/consulta-serasa/recuperar-uma-consulta).

+ Parameters
    + startDate (optional) - Data inicial da lista
    + finishDate (optional) - Data final da lista
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 3,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "object": "financialTransaction",
                    "id": "ftn_000015274322",
                    "value": -5.00,
                    "balance": 3772.81,
                    "type": "TRANSFER_FEE",
                    "date": "2019-07-16",
                    "description": "Taxa de transferência para conta bancária",
                    "paymentId": null,
                    "transferId": "b26df110-498b-40ba-b5c6-1428de4d59c7",
                    "anticipationId": null,
                    "billId": null,
                    "invoiceId": null,
                    "paymentDunningId": null,
                    "creditBureauReportId": null
                },
                {
                    "object": "financialTransaction",
                    "id": "ftn_000015278797",
                    "value": -50.00,
                    "balance": 3777.81,
                    "type": "TRANSFER",
                    "date": "2019-07-16",
                    "description": "Transferência para conta bancária",
                    "paymentId": null,
                    "transferId": "3b6c6838-54c5-434a-8a27-c577e278ae53",
                    "anticipationId": null,
                    "billId": null,
                    "invoiceId": null,
                    "paymentDunningId": null,
                    "creditBureauReportId": null
                },
                {
                    "object": "financialTransaction",
                    "id": "ftn_000015278794",
                    "value": -0.55,
                    "balance": 3827.81,
                    "type": "PHONE_CALL_NOTIFICATION_FEE",
                    "date": "2019-07-16",
                    "description": "Taxa de ligação para o cliente João da Silva referente a cobrança 00013218 vencida.",
                    "paymentId": "pay_156621686548884",
                    "transferId": null,
                    "anticipationId": null,
                    "billId": null,
                    "invoiceId": null,
                    "paymentDunningId": null,
                    "creditBureauReportId": null
                }
            ]
        }

## Informações e Personalização da Conta [/myAccount]

### Recuperar dados comerciais [GET /myAccount/]

Através deste endpoint é possível recuperar os dados comerciais da sua conta.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (MyAccount)

    + Body

            {
                "object": "account",
                "name": "Conta criada via API",
                "email": "emaildaempresa@gmail.com",
                "phone": "11 32300606",
                "mobilePhone": "11 988451155",
                "address": "Av. Rolf Wiest",
                "addressNumber": "659",
                "complement": "Sala 201",
                "province": "Bom Retiro",
                "postalCode": "89223005",
                "cpfCnpj": "66625514000140",
                "personType": "JURIDICA",
                "companyType": "MEI",
                "inscricaoEstadual": null,
                "city": {
                    "object": "city",
                    "id": 13660,
                    "ibgeCode": "4209102",
                    "name": "Joinville",
                    "districtCode": "05",
                    "district": "Joinville",
                    "state": "SC"
                },
                "birthDate": null,
                "status": "APPROVED",
                "denialReason": null
            }

### Salvar personalização da fatura [POST /myAccount/paymentCheckoutConfig/]

Possibilita personalizar a fatura que é apresentada ao seu cliente com o logo e cores da sua empresa. Após salva,
a personalização é analisada e aprovada pela nossa equipe dentro de algumas horas.

+ Request (multipart/form-data)

    + Headers
        access_token: sua_api_key

    + Attributes (NewPaymentCheckoutConfig)

    + Body

            {
                "logoBackgroundColor": "#ff0000",
                "infoBackgroundColor": "#000000",
                "fontColor": "#00ff00"
                "enabled": true,
                "logoFile": <file>
            }

+ Response 200 (application/json)

    + Attributes (PaymentCheckoutConfig)

    + Body

            {
                "object": "paymentCheckoutConfig",
                "logoBackgroundColor": "#ff0000",
                "infoBackgroundColor": "#000000",
                "fontColor": "#00ff00",
                "enabled": true,
                "logoUrl": null,
                "observations": "Aprovado automaticamente pelo sistema.",
                "status": "APPROVED"
            }

### Recuperar configurações de personalização [GET /myAccount/paymentCheckoutConfig/]

Recupera as informações de personalização da fatura.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (PaymentCheckoutConfig)

    + Body

            {
                "object": "paymentCheckoutConfig",
                "primaryColor": "#00ff00",
                "secondaryColor": "#000fff",
                "fontColor": "#00ff00",
                "enabled": true,
                "logoUrl": null,
                "observations": "Aprovado automaticamente pelo sistema.",
                "status": "APPROVED"
            }

## Notas Fiscais [/invoices]

Possibilita que empresas (pessoa jurídica) emitam Notas Fiscais para seus clientes. É possível emitir uma Nota Fiscal atrelada a cobranças já existentes.

Antes de emitir uma nota é necessário preencher as informações fiscais da sua conta. [Clique aqui para entender como fazer isso](#reference/0/informacoes-fiscais).

Os status possíveis de uma nota fiscal são os seguintes:

`SCHEDULED` - Agendada

`SYNCHRONIZED` - Enviada para prefeitura

`AUTHORIZED` - Emitida

`PROCESSING_CANCELLATION` - Processando cancelamento

`CANCELED` - Cancelada

`CANCELLATION_DENIED` - Cancelamento negado

`ERROR` - Erro na emissão

### Agendar nota fiscal [POST]

Agendar uma nota fiscal para o cliente. A Nota Fiscal pode estar atrelada a uma cobrança, parcelamento ou pode ser gerada de forma avulsa.

Se a Nota Fiscal for originada de uma cobrança existente, é necessário informar o atributo `payment`. O mesmo ocorre para parcelamentos, onde neste caso, é necessário informar o atributo `installment`. Para gerar uma Nota Fiscal avulsa, é necessário informar o atributo `customer`.

Você pode informar o serviço municipal desejado enviando o identificador único do serviço do seu município por meio do atributo `municipalServiceId`, este pode ser obtido por meio da nossa [seção de serviços municipais](#reference/0/notas-fiscais/listar-servicos-municipais).
Caso a lista de serviços não seja disponibilizada, você deve obtêr o código do serviço municipal desejado manualmente junto a sua prefeitura e envia-lo por meio do atributo `municipalServiceCode`.

Para assinaturas, você pode configurar a emissão de notas fiscais automáticas na [seção de assinaturas](#reference/0/assinaturas/criar-configuracao-para-emissao-de-notas-fiscais).

Caso ocorra sucesso nesta requisição, a Nota Fiscal será agendada para emissão na data informada no atributo `effectiveDate`. Se a data informada for o dia atual,
em até 15 minutos após a requisição a Nota Fiscal será emitida e você receberá a atualização através do webhook (se ativado).

+ Request (application/json)

    + Headers

            access_token: sua_api_key

    + Attributes (NewInvoice)

    + Body

            {
                "payment": "pay_637959110194",
                "installment": null,
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "value": 300.00,
                "deductions": 0,
                "effectiveDate": "2018-07-03",
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                },
                "municipalServiceId": null,
                "municipalServiceCode": "1.01",
                "municipalServiceName": "Análise e desenvolvimento de sistemas"
            }

+ Response 200 (application/json)

    + Attributes (Invoice)

    + Body

            {
                "object": "invoice",
                "id": "inv_000000000232",
                "status": "SCHEDULED",
                "customer": "cus_000000002750",
                "type": "NFS-e",
                "statusDescription": null,
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "pdfUrl": null,
                "xmlUrl": null,
                "rpsSerie": null,
                "rpsNumber": null,
                "number": null,
                "validationCode": null,
                "value": 300,
                "deductions": 0,
                "effectiveDate": "2018-07-03",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "estimatedTaxesDescription": "",
                "payment": "pay_145059895800",
                "installment": null,
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                },
                "municipalServiceId": null,
                "municipalServiceCode": "1.01",
                "municipalServiceName": "Análise e desenvolvimento de sistemas"
            }

### Atualizar nota fiscal [PUT /invoices/{id}]

É possível atualizar notas fiscais que ainda não tenham sido emitidas, ou seja, estão com status `SCHEDULED` ou `ERROR`.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

    + Body

            {
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "value": 300.00,
                "deductions": 10.00,
                "effectiveDate": "2018-07-03",
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                }
            }

+ Response 200 (application/json)

    + Attributes (Invoice)

    + Body

            {
                "object": "invoice",
                "id": "inv_000000000232",
                "status": "SCHEDULED",
                "customer": "cus_000000002750",
                "type": "NFS-e",
                "statusDescription": null,
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "pdfUrl": null,
                "xmlUrl": null,
                "rpsSerie": null,
                "rpsNumber": null,
                "number": null,
                "validationCode": null,
                "value": 300,
                "deductions": 10,
                "effectiveDate": "2018-07-03",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "estimatedTaxesDescription": "",
                "payment": "pay_145059895800",
                "installment": null,
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                },
                "municipalServiceCode": "1.01",
                "municipalServiceName": "Análise e desenvolvimento de sistemas"
            }

### Recuperar uma nota fiscal [GET /invoices/{id}]

Para recuperar uma nota fiscal específica é necessário que você tenha o ID que o Asaas retornou no momento da criação dela.

+ Parameters
    + id - Identificador único da nota fiscal no Asaas

+ Request (application/json)

    + Headers

            access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (Invoice)

    + Body

            {
                "object": "invoice",
                "id": "inv_000000000232",
                "status": "SCHEDULED",
                "customer": "cus_000000002750",
                "type": "NFS-e",
                "statusDescription": null,
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "pdfUrl": null,
                "xmlUrl": null,
                "rpsSerie": null,
                "rpsNumber": null,
                "number": null,
                "validationCode": null,
                "value": 300,
                "deductions": 10,
                "effectiveDate": "2018-07-03",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "estimatedTaxesDescription": "",
                "payment": "pay_145059895800",
                "installment": null,
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                },
                "municipalServiceCode": "1.01",
                "municipalServiceName": "Análise e desenvolvimento de sistemas"
            }

### Listar notas fiscais [GET /invoices{?effectiveDate%5Bge%5D,effectiveDate%5Ble%5D,payment,installment,status,offset,limit}]

Diferente da recuperação de uma nota fiscal específica, este método retorna uma lista paginada com todas as notas fiscais para os filtros informados.

Filtrar por data de emissão: `GET https://www.asaas.com/api/v3/invoices?effectiveDate%5Bge%5D=2018-06-03&effectiveDate%5Ble%5D=2018-06-10`

Filtrar por situação: `GET https://www.asaas.com/api/v3/invoices?status=SCHEDULED`

+ Parameters
    + effectiveDate%5Bge%5D (optional) - Filtrar a partir de uma data de emissão
    + effectiveDate%5Ble%5D (optional) - Filtrar até uma data de emissão
    + payment (optional) - Filtrar pelo identificador único da cobrança
    + installment (optional) - Filtrar pelo identificador único do parcelamento
    + externalReference (optional) - Identificador da nota fiscal no seu sistema
    + status (optional, enum) - Filtrar por situação
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Body

            {
                "object": "list",
                "hasMore": true,
                "totalCount": 213,
                "limit": 10,
                "offset": 0,
                "data": [
                    {
                        "object": "invoice",
                        "id": "inv_000000000232",
                        "status": "SCHEDULED",
                        "customer": "cus_000000002750",
                        "type": "NFS-e",
                        "statusDescription": null,
                        "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                        "pdfUrl": null,
                        "xmlUrl": null,
                        "rpsSerie": null,
                        "rpsNumber": null,
                        "number": null,
                        "validationCode": null,
                        "value": 300,
                        "deductions": 10,
                        "effectiveDate": "2018-07-03",
                        "observations": "Mensal referente aos trabalhos de Junho.",
                        "estimatedTaxesDescription": "",
                        "payment": "pay_145059895800",
                        "installment": null,
                        "externalReference": null,
                        "taxes": {
                            "retainIss": false,
                            "iss": 3,
                            "cofins": 3,
                            "csll": 1,
                            "inss": 0,
                            "ir": 1.5,
                            "pis": 0.65
                        },
                        "municipalServiceCode": "1.01",
                        "municipalServiceName": "Análise e desenvolvimento de sistemas"
                    },
                    {
                        "object": "invoice",
                        "id": "inv_000000000278",
                        "status": "CANCELED",
                        "customer": "cus_000000002758",
                        "type": "NFS-e",
                        "statusDescription": null,
                        "serviceDescription": "teste para descrição de serviço",
                        "pdfUrl": null,
                        "xmlUrl": null,
                        "rpsSerie": null,
                        "rpsNumber": null,
                        "number": null,
                        "validationCode": null,
                        "value": 21,
                        "deductions": 10,
                        "effectiveDate": "2018-06-25",
                        "observations": "nota fiscal de teste",
                        "estimatedTaxesDescription": "",
                        "payment": "pay_637959110194",
                        "installment": null,
                        "externalReference": null,
                        "taxes": {
                            "retainIss": false,
                            "iss": 0,
                            "cofins": 1,
                            "csll": 0,
                            "inss": 1,
                            "ir": 0,
                            "pis": 0
                        },
                        "municipalServiceCode": "1.01",
                        "municipalServiceName": "Análise e desenvolvimento de sistemas"
                    }
                ]
            }

### Emitir uma nota fiscal [POST /invoices/{id}/authorize]

Para emitir uma nota fiscal específica é necessário que você tenha o ID que o Asaas retornou no momento da criação dela.

+ Parameters
    + id - Identificador único da nota fiscal no Asaas

+ Request (application/json)

    + Headers

            access_token: sua_api_key


+ Response 200 (application/json)

    + Attributes (Invoice)

    + Body

            {
                "object": "invoice",
                "id": "inv_000000000232",
                "status": "AUTHORIZED",
                "customer": "cus_000000002750",
                "type": "NFS-e",
                "statusDescription": null,
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "pdfUrl": "http://api.enotasgw.com.br/file/teste/pdf",
                "xmlUrl": "http://api.enotasgw.com.br/file/teste/xml",
                "rpsSerie": "11",
                "rpsNumber": "189",
                "number": "170639",
                "validationCode": "5ABDA3ED-4A62-34AF-3D7F-F13AB07E7B28",
                "value": 300,
                "deductions": 10,
                "effectiveDate": "2018-07-03",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "estimatedTaxesDescription": "",
                "payment": "pay_145059895800",
                "installment": null,
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                },
                "municipalServiceCode": "1.01",
                "municipalServiceName": "Análise e desenvolvimento de sistemas"
            }

### Cancelar uma nota fiscal [POST /invoices/{id}/cancel]

Para cancelar uma nota fiscal específica é necessário que você tenha o ID que o Asaas retornou no momento da criação dela.

+ Parameters
    + id - Identificador único da nota fiscal no Asaas

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Invoice)

    + Body

            {
                "object": "invoice",
                "id": "inv_000000000232",
                "status": "CANCELED",
                "customer": "cus_000000002750",
                "type": "NFS-e",
                "statusDescription": null,
                "serviceDescription": "Nota fiscal da Fatura 101940. \nDescrição dos Serviços: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS",
                "pdfUrl": null,
                "xmlUrl": null,
                "rpsSerie": null,
                "rpsNumber": null,
                "number": null,
                "validationCode": null,
                "value": 300,
                "deductions": 10,
                "effectiveDate": "2018-07-03",
                "observations": "Mensal referente aos trabalhos de Junho.",
                "estimatedTaxesDescription": "",
                "payment": "pay_145059895800",
                "installment": null,
                "externalReference": null,
                "taxes": {
                    "retainIss": false,
                    "iss": 3,
                    "cofins": 3,
                    "csll": 1,
                    "inss": 0,
                    "ir": 1.5,
                    "pis": 0.65
                },
                "municipalServiceCode": "1.01",
                "municipalServiceName": "Análise e desenvolvimento de sistemas"
            }

### Listar serviços municipais [GET /invoices/municipalServices{?description}]

A lista de serviços municipais pode ser utilizada para consultar informações do serviço que deve ser enviado na geração da nota fiscal.

O campo `description` além de conter o código e descrição do serviço pode conter também o código CNAE, sendo apresentado no seguinte formato:
`CNAE | Codigo - Descrição`.

A cada requisição são retornados no máximo 500 serviços, caso o serviço desejado não seja retornado, utilize o filtro `description` na requisição.

> **Atenção:**
> - Dependendo da sua prefeitura o código CNAE pode não ser retornado.
> - Caso sua prefeitura não disponibilize a lista de serviços nenhum resultado será retornado.

+ Parameters
    + description (optional) - Nome do serviço

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (InvoiceMunicipalService)

    + Body

            {
                "object": "list",
                "hasMore": true,
                "totalCount": 2,
                "limit": 10,
                "offset": 0,
                "data": [
                    {
                        "id": "3544",
                        "description": "1.01 - Análise e desenvolvimento de sistemas",
                        "issTax": 5
                    },
                    {
                        "id": "3545",
                        "description": "1.02 - Programação",
                        "issTax": 3
                    }
                ]
            }

## Informações fiscais [/customerFiscalInfo]

Antes de emitir uma Nota Fiscal é necessário definir as configurações fiscais da sua empresa, como número do RPS, usuário e senha da prefeitura (ou certificado), entre outros.

### Listar configurações municipais [GET /customerFiscalInfo/municipalOptions]

Algumas configurações para emissão de notas fiscais dependem da prefeitura onde a nota fiscal é emitida.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (InvoiceMunicipalOptions)

    + Body

            {
                "authenticationType": "CERTIFICATE",
                "supportsCancellation": true,
                "usesSpecialTaxRegimes": true,
                "usesServiceListItem": true,
                "usesStateInscription": false,
                "specialTaxRegimesList": [
                    {
                        "label": " - ",
                        "value": "0"
                    },
                    {
                        "label": "Microempresa Municipal",
                        "value": "1"
                    },
                    {
                        "label": "Estimativa",
                        "value": "2"
                    },
                    {
                        "label": "Sociedade de Profissionais",
                        "value": "3"
                    },
                    {
                        "label": "Cooperativa",
                        "value": "4"
                    },
                    {
                        "label": "MEI - Simples Nacional",
                        "value": "5"
                    },
                    {
                        "label": "ME EPP - Simples Nacional",
                        "value": "6"
                    }
                ],
                "municipalInscriptionHelp": "Informe somente os números sem ponto nem formatação (se contiver letras, insira sempre em maiúscula).\r\n\r\nExemplos válidos: 4301000010 ou 131436001X",
                "specialTaxRegimeHelp": "Isso identifica o regime de tributação de sua empresa, se desejar deixar sem nenhuma opção marcada selecione o traço (\"-\").\r\n \r\n Empresas do simples nacional geralmente optam pelo ME ou ME EPP",
                "serviceListItemHelp": "Informe aqui o item da lista de serviço, é também um identificador do serviço prestado.\r\n \r\n Você precisa preencher o item da lista de serviço mantendo a formatação.\r\n Exemplos válidos: 17.02 ou 8.02",
                "digitalCertificatedHelp": "Sua prefeitura exige a utilização de certificado digital, portanto, inclua aqui o arquivo de seu certificado A1.",
                "accessTokenHelp": null,
                "municipalServiceCodeHelp": "Informe aqui o código municipal que identifica o serviço prestado na nota fiscal. \r\nEm algumas cidades esse código é conhecido como código de tributação ou CTISS.\r\n\r\nExemplo válido: 010300388"
            }

### Criar e atualizar informações fiscais [POST]

Permite criar ou atualizar as configurações para emissão de notas fiscais.

> **Atenção:** Para entender melhor quais campos são obrigatórios e o que informar em cada campo para a integração com a prefeitura do seu município, execute a consulta de configurações municipais em [Listar configurações municipais](#reference/0/informacoes-fiscais/listar-configuracoes-municipais).

+ Request (multipart/form-data)

    + Headers

            access_token: sua_api_key

    + Attributes (NewCustomerFiscalInfo)

    + Body

            {
                "object": "customerFiscalInfo",
                "simplesNacional": false,
                "rpsSerie": "1",
                "rpsNumber": 1,
                "loteNumber": 1,
                "username": "usuario",
                "specialTaxRegime": "1",
                "email": "marcelo.almeida@gmail.com",
                "serviceListItem": null,
                "cnae": "6209100",
                "culturalProjectsPromoter": false,
                "municipalInscription": "21779501",
                "stateInscription": null,
                "password": "secret",
                "accessToken": null,
                "certificateFile": null,
                "certificatePassword": "secret"
            }

+ Response 200 (application/json)

    + Attributes (CustomerFiscalInfo)

    + Body

            {
                "object": "customerFiscalInfo",
                "simplesNacional": false,
                "rpsSerie": "1",
                "rpsNumber": 1,
                "loteNumber": 1,
                "username": "usuario",
                "passwordSent": true,
                "accessTokenSent": false,
                "certificateSent": true,
                "specialTaxRegime": "1",
                "email": "marcelo.almeida@gmail.com",
                "serviceListItem": null,
                "cnae": "6209100",
                "culturalProjectsPromoter": false,
                "municipalInscription": "21779501",
                "stateInscription": null
            }


### Recuperar informações fiscais [GET]

Permite verificar as configurações para emissão de notas fiscais. Caso ainda não tenha sido cadastrada, será retornado `HTTP 404`.
+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (CustomerFiscalInfo)

    + Body

            {
                "object": "customerFiscalInfo",
                "simplesNacional": false,
                "rpsSerie": "1",
                "rpsNumber": 1,
                "loteNumber": 1,
                "username": "usuario",
                "passwordSent": true,
                "accessTokenSent": false,
                "certificateSent": true,
                "specialTaxRegime": "1",
                "email": "marcelo.almeida@gmail.com",
                "serviceListItem": null,
                "cnae": "6209100",
                "culturalProjectsPromoter": false,
                "municipalInscription": "21779501",
                "stateInscription": null
            }

# Group Configuração de Webhooks

Através da [área Minha Conta do Asaas](https://www.asaas.com/config/index?tab=pushNotification&integrationTab=payment-webhook), na aba de integrações, é possível configurar todas as informações necessárias para habilitar o recebimento das requisições via webhook. Entretanto, se for necessário fazer estas configurações via API, o Asaas disponibiliza os seguintes endpoints:

## Webhook para cobranças [/webhook]

### Criar ou atualizar configuração para Webhook [POST]

Cria ou atualiza a configuração de webhook para notificações de cobranças.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

    + Attributes (Webhook)

    + Body

            {
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "interrupted": false,
                "enabled": true,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

+ Response 200 (application/json)

    + Attributes (WebhookResponse)

    + Body

            {
                "object": "webhook",
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "enabled": true,
                "interrupted": false,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

### Recuperar configuração de Webhook [GET]

Busca a configuração de webhook para notificações de cobranças.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (WebhookResponse)

    + Body

            {
                "object": "webhook",
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "enabled": true,
                "interrupted": false,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

## Webhook para notas fiscais [/webhook/invoice]

### Criar ou atualizar configuração para Webhook [POST]

Cria ou atualiza a configuração de webhook para notificações de notas fiscais.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

    + Attributes (Webhook)

    + Body

            {
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "interrupted": false,
                "enabled": true,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

+ Response 200 (application/json)

    + Attributes (WebhookResponse)

    + Body

            {
                "object": "webhook",
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "enabled": true,
                "interrupted": false,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

### Recuperar configuração de Webhook [GET]

Busca a configuração de webhook para notificações de notas fiscais.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (WebhookResponse)

    + Body

            {
                "object": "webhook",
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "enabled": true,
                "interrupted": false,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

## Webhook para transferências [/webhook/transfer]

### Criar ou atualizar configuração para Webhook [POST]

Cria ou atualiza a configuração de webhook para transferências bancárias e entre contas Asaas.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

    + Attributes (Webhook)

    + Body

            {
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "interrupted": false,
                "enabled": true,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

+ Response 200 (application/json)

    + Attributes (WebhookResponse)

    + Body

            {
                "object": "webhook",
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "enabled": true,
                "interrupted": false,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

### Recuperar configuração de Webhook [GET]

Busca a configuração de webhook para notificações de transferências bancárias e entre contas Asaas.

+ Request (application/json)

    + Headers

            access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (WebhookResponse)

    + Body

            {
                "object": "webhook",
                "url": "https://www.exemplo.com/webhook/asaas",
                "email": "marcelo.almeida@gmail.com",
                "enabled": true,
                "interrupted": false,
                "apiVersion": 3,
                "authToken": "5tLxsL6uoN"
            }

# Group Contas Asaas

Possibilita criar novas contas Asaas vinculadas a uma conta raiz.

### Criar Conta [POST /accounts]

Esta ação é utilizada para criar novas contas.

O objeto de retorno da API conterá a chave de API da conta criada (`apiKey`) além do `walletId` para Split de Cobranças ou Transferências.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes (NewAccount)

    + Body
        {
            "name": "Conta criada via API",
            "email": "emaildaempresa@gmail.com",
            "cpfCnpj": "66625514000140",
            "companyType": "MEI",
            "phone": "11 32300606",
            "mobilePhone": "11 988451155",
            "address": "Av. Rolf Wiest",
            "addressNumber": "277",
            "complement": "Sala 502",
            "province": "Bom Retiro",
            "postalCode": "89223005",
        }


+ Response 200 (application/json)

    + Attributes (AccountWithApiKey)

    + Body

            {
                "object": "account",
                "name": "Conta criada via API",
                "email": "emaildaempresa@gmail.com",
                "loginEmail": "emaildaempresa@gmail.com",
                "phone": "11 32300606",
                "mobilePhone": "11 988451155",
                "address": "Av. Rolf Wiest",
                "addressNumber": "659",
                "complement": "Sala 201",
                "province": "Bom Retiro",
                "postalCode": "89223005",
                "cpfCnpj": "66625514000140",
                "personType": "JURIDICA",
                "companyType": "MEI",
                "city": 13660,
                "state": "SC",
                "country": "Brasil",
                "apiKey": "3d425760b01ea73feab3357de2a50c42fc8bc055861f4631e3be906700210874",
                "walletId": "ed398a78-07c5-4f61-ac13-e42c21cd82e4"
            }



O objeto de retorno da API conterá a chave de API da conta criada (`apiKey`) além do `walletId` para Split de Cobranças.

### Listar Contas [GET /accounts]

Esta ação é utilizada para listar todas contas criadas a partir de uma conta raiz.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (Account)

    + Body

            {
              "object": "list",
              "hasMore": false,
              "totalCount": 3,
              "limit": 10,
              "offset": 0,
              "data": [
                {
                    "object": "account",
                    "name": "Pietro e Renato Construções ME",
                    "email": "tesouraria@pietroerenatoconstrucoesme.com.br",
                    "loginEmail": "tesouraria@pietroerenatoconstrucoesme.com.br",
                    "phone": "(16) 2955-6126",
                    "mobilePhone": "(16) 98617-4337",
                    "address": "Rua Fernando Orlandi",
                    "addressNumber": "544",
                    "complement": "Sala 201",
                    "province": "Jardim Pedra Branca",
                    "postalCode": "14079-452",
                    "cpfCnpj": "35381637000150",
                    "personType": "JURIDICA",
                    "companyType": "MEI",
                    "city": 15478,
                    "state": "SP",
                    "country": "Brasil",
                    "walletId": "c0c1688f-636b-42c0-b6ee-7339182276b7"
                },
                {
                    "object": "account",
                    "name": "Valentina e Vinicius Joalheria ME",
                    "email": "comunicacoes@valentinaeviniciusjoalheriame.com.br",
                    "loginEmail": "comunicacoes@valentinaeviniciusjoalheriame.com.br",
                    "phone": "(11) 3833-9166",
                    "mobilePhone": "(11) 98195-3221",
                    "address": "Rua José Guerra 127",
                    "addressNumber": "818",
                    "complement": "Sala 14",
                    "province": "Chácara Santo Antônio (Zona Sul)",
                    "postalCode": "04719-910",
                    "cpfCnpj": "42223689000163",
                    "personType": "JURIDICA",
                    "companyType": "INDIVIDUAL",
                    "city": 15436,
                    "state": "SP",
                    "country": "Brasil",
                    "walletId": "c65acaff-7d26-4160-9363-de139414c18a"
                },
                {
                    "object": "account",
                    "name": "Matheus e Vicente Fotografias Ltda",
                    "email": "comunicacoes@matheusevicentefotografiasltda.com.br",
                    "loginEmail": "comunicacoes@matheusevicentefotografiasltda.com.br",
                    "phone": "(19) 2922-9725",
                    "mobilePhone": "(19) 98366-4040",
                    "address": "Rua AryLeme Brisola",
                    "addressNumber": "144",
                    "complement": "",
                    "province": "Parque Novo Mundo",
                    "postalCode": "13481-380",
                    "cpfCnpj": "01614761000104",
                    "personType": "JURIDICA",
                    "companyType": "MEI",
                    "city": 15487,
                    "state": "SP",
                    "country": "Brasil",
                    "walletId": "bb7c610b-8d41-4630-bdc9-010c805a2bb3"
                }
              ]
            }

# Group Recarga de Celular

Possibilita fazer recargas de celular utilizando o saldo da conta Asaas.

### Solicitar Recarga [POST /mobilePhoneRecharges]

Esta ação é utilizada para solicitar a recarga de celular.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

    + Attributes
        + value (number, required) - Valor da recarga
        + phoneNumber (string, required) - Número do celular

    + Body
            {
                "value": 15,
                "phoneNumber": "63997365512"
            }


+ Response 200 (application/json)

    + Attributes (MobilePhoneRecharge)

    + Body

            {
                "id": "37c22147-4194-11ec-8061-0242ac120002",
                "value": 15.00,
                "phoneNumber": "63997365512",
                "status": "PENDING",
                "canBeCancelled": true,
                "operatorName": "Vivo"
            }

### Recuperar uma única recarga de celular [GET /mobilePhoneRecharges/{id}]

Para recuperar uma recarga de celular em específico é necessário que você tenha o ID que o Asaas retornou no momento da sua criação.

+ Parameters
    + id - Identificador único da recarga de celular no Asaas

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Attributes (MobilePhoneRecharge)
    + Body

            {
                "id": "37c22147-4194-11ec-8061-0242ac120002",
                "value": 15.00,
                "phoneNumber": "63997365512",
                "status": "PENDING",
                "canBeCancelled": true,
                "operatorName": "Vivo"
            }

### Listar recargas de celular [GET /mobilePhoneRecharges{?offset,limit}]

Diferente da recuperação de uma recarga de celular em específico, este método retorna uma lista paginada com todas as recargas.

+ Parameters
    + offset (number, optional) - Elemento inicial da lista
    + limit (number, optional) - Número de elementos da lista (max: 100)

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

        {
            "object": "list",
            "hasMore": false,
            "totalCount": 2,
            "limit": 10,
            "offset": 0,
            "data": [
                {
                    "id": "37c22147-4194-11ec-8061-0242ac120002",
                    "value": 15.00,
                    "phoneNumber": "63997365512",
                    "status": "PENDING",
                    "canBeCancelled": true,
                    "operatorName": "Vivo"
                },
                {
                    "id": "435cc240-4194-11ec-8061-0242ac120002",
                    "value": 13.00,
                    "phoneNumber": "63997365512",
                    "status": "CONFIRMED",
                    "canBeCancelled": false,
                    "operatorName": "Vivo"
                }
            ]
        }

### Cancelar uma recarga de celular [POST /mobilePhoneRecharges/{id}/cancel]

Permite o cancelamento da recarga de celular. Utilize a propriedade ``canBeCancelled`` para verificar se a recarga pode ser cancelada.

Ao ser cancelado a recarga não será realizada.

+ Parameters
    + id (required) - Identificador único da recarga a ser cancelada.

+ Request (application/json)

    + Headers
        access_token: sua_api_key


+ Response 200 (application/json)


    + Attributes (MobilePhoneRecharge)
    + Body
            {
                    "id": "37c22147-4194-11ec-8061-0242ac120002",
                    "value": 15.00,
                    "phoneNumber": "63997365512",
                    "status": "CANCELLED",
                    "canBeCancelled": false,
                    "operatorName": "Vivo"
            }

### Buscar qual provedor o número pertence e os valores disponíveis para recarga [GET /mobilePhoneRecharges/{phoneNumber}/provider]

Este endpoint retorna qual provedor o número enviado pertence e uma lista com os valores disponíveis para a recarga.

+ Parameters
    + phoneNumber - Número do celular que será consultado.

+ Request (application/json)

    + Headers
        access_token: sua_api_key

+ Response 200 (application/json)

    + Body

        {
            "name": "Vivo",
            "values": [
                {
                    "name": "R$ 12,00",
                    "description": "",
                    "bonus": "0.0",
                    "minValue": 12.0,
                    "maxValue": 12.0
                },
                {
                    "name": "R$ 15,00",
                    "description": "",
                    "bonus": "0.0",
                    "minValue": 15.0,
                    "maxValue": 15.0
                }
            ]
        }

# Data Structures

## ClienteUpd
* id - ID do cliente,
+ email - Email do cliente
+ phone - Fone fixo
+ mobilePhone - Fone celular
+ address - Logradouro
+ addressNumber - Número do endereço
+ complement - Complemento do endereço
+ province - Bairro
+ postalCode - CEP do endereço
+ city - Cidade
+ state - Estado (UF)
+ observations - Observações adicionais

## ChargeType (enum)
+ DETACHED - Avulsa
+ RECURRENT - Assinatura
+ INSTALLMENT - Parcelamento

## BillingTypeForCreation (enum)
+ BOLETO - Boleto Bancário
+ CREDIT_CARD - Cartão de Crédito
+ PIX - Pix
+ UNDEFINED - Perguntar ao Cliente

## BillingType (enum)
+ BOLETO - Boleto Bancário
+ CREDIT_CARD - Cartão de Crédito
+ UNDEFINED - Perguntar ao Cliente
+ DEBIT_CARD - Cartão de Débito
+ TRANSFER - Transferência bancária
+ DEPOSIT - Depósito bancário
+ PIX - Pix

## NewPayment
+ customer (required) - Identificador único do cliente no Asaas
+ billingType (BillingTypeForCreation, required) - Forma de pagamento
+ value (number, required) - Valor da cobrança
+ dueDate (required) - Data de vencimento da cobrança
+ description - Descrição da cobrança (máx. 500 caracteres)
+ externalReference - Campo livre para busca
+ installmentCount (number) - Número de parcelas (somente no caso de cobrança parcelada)
+ installmentValue (number) - Valor de cada parcela (somente no caso de cobrança parcelada)
+ discount (DiscountObject) - Informações de desconto
+ interest (InterestObject) - Informações de juros para pagamento após o vencimento
+ fine (FineObject) - Informações de multa para pagamento após o vencimento
+ postalService (boolean) - Define se a cobrança será enviada via Correios
+ split (array[SplitInfo])

## NewPaymentWithCreditCard (NewPayment)
+ creditCard (CreditCard, required) - Informações do cartão de crédito
+ creditCardHolderInfo (CreditCardHolderInfo, required) - Informações do titular do cartão de crédito
+ creditCardToken - Token do cartão de crédito para uso da funcionalidade de tokenização de cartão de crédito
+ remoteIp (required) - IP de onde o cliente está fazendo a compra. Não deve ser informado o IP do seu servidor.

## Payment
+ id (required) - Identificador único da cobrança no Asaas
+ dateCreated (required) - Data de criação da cobrança
+ customer (required) - Identificador único do cliente ao qual a cobrança pertence
+ paymentLink - Identificador único do link de pagamentos ao qual a cobrança pertence
+ subscription - Identificador único da assinatura (quando cobrança recorrente)
+ installment - Identificador único do parcelamento (quando cobrança parcelada)
+ dueDate (required) - Data de vencimento da cobrança
+ value (number, required) - Valor da cobrança
+ netValue (number) - Valor líquido da cobrança após desconto da tarifa do Asaas
+ discount (DiscountObject) - Informações de desconto
+ interest (InterestObject) - Informações de juros para pagamento após o vencimento
+ fine (FineObject) - Informações de multa para pagamento após o vencimento
+ billingType (BillingType, required) - Forma de pagamento
+ status (PaymentStatus) - Status da cobrança
+ description - Descrição da cobrança
+ externalReference - Campo livre para busca
+ originalDueDate - Vencimento original no ato da criação da cobrança
+ originalValue (number) - Valor original da cobrança (preenchido quando paga com juros e multa)
+ interestValue (number) - Valor calculado de juros e multa que deve ser pago após o vencimento da cobrança
+ confirmedDate - Data de confirmação da cobrança (Somente para cartão de crédito)
+ paymentDate - Data de liquidação da cobrança no Asaas
+ clientPaymentDate - Data em que o cliente efetuou o pagamento do boleto
+ invoiceUrl - URL da fatura
+ bankSlipUrl - URL para download do boleto
+ transactionReceiptUrl - URL do comprovante de confirmação, recebimento, estorno ou remoção.
+ invoiceNumber - Número da fatura
+ deleted (boolean) - true quando a cobrança estiver excluída
+ postalService (boolean) - Define se a cobrança será enviada via Correios
+ anticipated (boolean) - Define se a cobrança foi antecipada ou está em processo de antecipação
+ split (array[SplitInfo])

## PaymentStatus (enum)
+ PENDING - Cobrança aguardando pagamento
+ CONFIRMED - Cobrança Confirmada (Somente para cartão de crédito)
+ RECEIVED - Cobrança Recebida
+ RECEIVED_IN_CASH - Cobrança Recebida em Dinheiro (não gera saldo)
+ OVERDUE - Cobrança Atrasada
+ REFUND_REQUESTED - Estorno Solicitado
+ REFUNDED - Cobrança Estornada
+ CHARGEBACK_REQUESTED - Recebido chargeback
+ CHARGEBACK_DISPUTE - Em disputa de chargeback (caso sejam apresentados documentos para contestação)
+ AWAITING_CHARGEBACK_REVERSAL - Disputa vencida, aguardando repasse da adquirente
+ DUNNING_REQUESTED - Em processo de recuperação
+ DUNNING_RECEIVED - Recuperada
+ AWAITING_RISK_ANALYSIS - Pagamento em análise

## PaymentWithCreditCard (Payment)
+ creditCard (CreditCardResponse) - Informações do cartão utilizado na cobrança

## PaymentWithSplit (Payment)
+ split (array[SplitInfo])

## SubscriptionCycle (enum)
+ WEEKLY - Semanal
+ BIWEEKLY - Quinzenal (2 semanas)
+ MONTHLY - Mensal
+ QUARTERLY - Trimestral
+ SEMIANNUALLY - Semestral
+ YEARLY - Anual

## NewSubscription
+ customer (required) - Identificador único do cliente no Asaas
+ billingType (BillingTypeForCreation, required) - Forma de pagamento
+ value (number, required) - Valor da assinatura
+ nextDueDate (required) - Vencimento da primeira mensalidade
+ discount (DiscountObject) - Informações de desconto
+ interest (InterestObject) - Informações de juros para pagamento após o vencimento
+ fine (FineObject) - Informações de multa para pagamento após o vencimento
+ cycle (SubscriptionCycle, required) - Periodicidade da cobrança
+ description - Descrição da assinatura (máx. 500 caracteres)
+ endDate - Data limite para vencimento das mensalidades
+ maxPayments - Número máximo de mensalidades a serem geradas para esta assinatura
+ externalReference (string) - Identificador da assinatura no seu sistema

## Subscription
+ id (required) - Identificador único da assinatura no Asaas
+ dateCreated (required) - Data de criação da assinatura
+ customer (required) - Identificador único do cliente no Asaas
+ paymentLink - Identificador único do link de pagamentos ao qual a assinatura pertence
+ billingType (BillingTypeForCreation, required) - Forma de pagamento
+ value (number, required) - Valor da assinatura
+ nextDueDate (required) - Vencimento da próxima mensalidade a ser gerada
+ discount (DiscountObject) - Informações de desconto
+ interest (InterestObject) - Informações de juros para pagamento após o vencimento
+ fine (FineObject) - Informações de multa para pagamento após o vencimento
+ cycle (enum, required) - Periodicidade da cobrança
    + Members
        + WEEKLY - Semanal
        + BIWEEKLY - Quinzenal (2 semanas)
        + MONTHLY - Mensal
        + QUARTERLY - Trimestral
        + SEMIANNUALLY - Semestral
        + YEARLY - Anual
+ description - Descrição da assinatura
+ endDate - Data limite para vencimento das mensalidades
+ maxPayments - Número máximo de mensalidades a serem geradas para esta assinatura
+ status (enum, required) - Status da assinatura
    + Members
        + ACTIVE - Ativa (enquanto houver mensalidades a serem geradas)
        + EXPIRED - Expirada (quando não há mais mensalidades a serem geradas por ter excedido a data limite ou número de mensalidades)
+ externalReference (string) - Identificador da assinatura no seu sistema

## UpdateSubscription
+ billingType (BillingTypeForCreation) - Forma de pagamento
+ value (number) - Valor da assinatura
+ nextDueDate - Vencimento da próxima mensalidade a ser gerada
+ discount (DiscountObject) - Informações de desconto
+ interest (InterestObject) - Informações de juros para pagamento após o vencimento
+ fine (FineObject) - Informações de multa para pagamento após o vencimento
+ cycle (enum, required) - Periodicidade da cobrança
    + Members
        + WEEKLY - Semanal
        + BIWEEKLY - Quinzenal (2 semanas)
        + MONTHLY - Mensal
        + QUARTERLY - Trimestral
        + SEMIANNUALLY - Semestral
        + YEARLY - Anual
+ description - Descrição da assinatura (máx. 500 caracteres)
+ updatePendingPayments - true para atualizar mensalidades já existentes com o novo valor ou forma de pagamento
+ externalReference (string) - Identificador da assinatura no seu sistema

## NewSubscriptionWithCreditCard (NewSubscription)
+ creditCard (CreditCard, required) - Informações do cartão de crédito
+ creditCardHolderInfo (CreditCardHolderInfo, required) - Informações do titular do cartão de crédito
+ creditCardToken - Token do cartão de crédito para uso da funcionalidade de tokenização de cartão de crédito
+ remoteIp (required) - IP de onde o cliente está fazendo a compra. Não deve ser informado o IP do seu servidor.

## SubscriptionWithCreditCard (Subscription)
+ creditCard (CreditCardResponse) - Informações do cartão utilizado na cobrança

## UpdateNotification
+ enabled (boolean) - Habilita/desabilita a notificação
+ emailEnabledForProvider (boolean) - habilita/desabilita o email enviado para você
+ smsEnabledForProvider (boolean) - habilita/desabilita o SMS enviado para você
+ emailEnabledForCustomer (boolean) - habilita/desabilita o email enviado para o seu cliente
+ smsEnabledForCustomer (boolean) - habilita/desabilita o SMS enviado para o seu cliente
+ phoneCallEnabledForCustomer (boolean) - habilita/desabilita a notificação por voz enviada para o seu cliente
+ event (enum) - Tipo de evento
    + Members
        + PAYMENT_CREATED - Geração de nova cobrança
        + PAYMENT_UPDATED -Atualização no valor ou vencimento da cobrança
        + PAYMENT_RECEIVED - Recebimento ou confirmação da cobrança
        + PAYMENT_OVERDUE - Atraso no pagamento da cobrança
        + PAYMENT_DUEDATE_WARNING - Aviso de vencimento
        + SEND_LINHA_DIGITAVEL - Envio de linha digitável
+ scheduleOffset (enum) - Especifica quantos dias antes do vencimento a notificação deve se enviada. ***Válido somente para o evento PAYMENT_DUEDATE_WARNING***
    + Members
        + 0 (number) - Enviar no dia do vencimento
        + 5 (number) - Enviar 5 dias antes do vencimento
        + 10 (number) - Enviar 10 dias antes do vencimento
        + 15 (number) - Enviar 15 dias antes do vencimento

## CreditCard
+ holderName (required) - Nome impresso no cartão
+ number (required) - Número do cartão
+ expiryMonth (required) - Mês de expiração (ex: 06)
+ expiryYear (required) - Ano de expiração com 4 dígitos (ex: 2019)
+ ccv (required) - Código de segurança

## CreditCardHolderInfo
+ name (required) - Nome do titular do cartão
+ email (required) - Email do titular do cartão
+ cpfCnpj (required) - CPF ou CNPJ do titular do cartão
+ postalCode (required) - CEP do titular do cartão
+ addressNumber (required) - Número do endereço do titular do cartão
+ addressComplement - Complemento do endereço do titular do cartão
+ phone (required) - Fone com DDD do titular do cartão
+ mobilePhone - Fone celular do titular do cartão

## CreditCardResponse
+ creditCardNumber - Últimos 4 dígitos do cartão utilizado
+ creditCardBrand - Bandeira do cartão utilizado
+ creditCardToken - Token do cartão de crédito que poderá ser enviado nas próximas transações sem a necessidade de informar novamente os dados de cartão e do titular.

## DiscountObject
+ value (number) - Valor percentual ou fixo de desconto a ser aplicado sobre o valor da cobrança
+ dueDateLimitDays (number) - Dias antes do vencimento para aplicar desconto. Ex: 0 = até o vencimento, 1 = até um dia antes, 2 = até dois dias antes, e assim por diante
+ type (enum) - Tipo de desconto
    + Members
        + FIXED - Valor fixo
        + PERCENTAGE - Valor percentual

## FineObject
+ value (number) - Percentual de multa sobre o valor da cobrança para pagamento após o vencimento

## InterestObject
+ value (number) - Percentual de juros **ao mês** sobre o valor da cobrança para pagamento após o vencimento

## SplitInfo
+ walletId (required) - Identificador da carteira (retornado no momento da criação da conta)
+ fixedValue (number) - Valor fixo a ser transferido para a conta quando a cobrança for recebida
+ percentualValue (number) - Percentual sobre o valor líquido da cobrança a ser transferido quando for recebida

## InternalTransferAccount
+ name - "Nome da conta de destino"
+ cpfCnpj - "CPF ou CNPJ da conta de destino"

## NewInternalTransfer
+ walletId (required) - WalletId da conta de destino
+ value (number, required) - Valor a ser transferido

## InternalTransfer
+ id (required) - Identificador único da transferência no Asaas
+ dateCreated - Data de solicitação da transferência
+ value (number) - Valor da transferência
+ status (enum) - Situação da transferência
    + Members
        + DONE - Transferência efetivada
        + PENDING - Agendada
        + CANCELLED - Transferência cancelada
+ transferFee (number) - Taxa de transferência (0 para transferências entre contas Asaas)
+ effectiveDate - Data de efetivação
+ scheduleDate - Data de agendamento
+ authorized (boolean) - False quando aguarda autorização através do Token SMS
+ walletId - WalletId da conta de destino
+ account (InternalTransferAccount) - Informações básicas da conta de destino
+ transactionReceiptUrl - Comprovante de transferência, estará disponível após a transferência ser confirmada.

## Bank
+ code (required) - Código de compensação do banco no sistema bancário

## BankAccount
+ bank (required, Bank) - Dados do banco de destino
+ accountName - Nome da conta bancária
+ ownerName (required) - Nome do proprietário da conta bancária
+ ownerBirthDate - Data de nascimento do proprietário da conta. Somente quando a conta bancária não pertencer ao mesmo CPF ou CNPJ da conta Asaas.
+ cpfCnpj (required) - CPF ou CNPJ do proprietário da conta bancária
+ agency (required) - Número da agência sem dígito
+ account (required) - Número da conta bancária sem dígito
+ accountDigit (required) - Dígito da conta bancária
+ bankAccountType (required, enum) - Tipo da conta
    + Members
        + CONTA_CORRENTE - Conta corrente
        + CONTA_POUPANCA - Conta poupança

## NewTransfer
+ value (number, required) - Valor a ser transferido
+ bankAccount (BankAccount, required) - Dados da conta bancária

## Transfer
+ id (required) - Identificador único da transferência no Asaas
+ dateCreated - Data de solicitação da transferência
+ value (number) - Valor da transferência
+ netValue (number) - Valor líquido descontada a taxa de transferência
+ status (enum) - Situação da transferência
    + Members
        + PENDING - Agendada
        + BANK_PROCESSING - Em processamento bancário
        + DONE - Efetivada
        + CANCELLED - Cancelada
        + FAILED - Falha na transferência. Normalmente ocorre em caso de dados bancários inválidos
+ transferFee (number) - Taxa de transferência
+ effectiveDate - Data de efetivação
+ scheduleDate - Data de agendamento
+ authorized (boolean) - False quando aguarda autorização através do Token SMS
+ failReason - Motivo da falha da transferência
+ bankAccount (object) - Dados da conta bancária
+ transactionReceiptUrl - Comprovante de transferência, estará disponível após a transferência ser confirmada.

## Invoice
+ id - Identificador único da nota fiscal no Asaas
+ status (enum) - Status
    + Members
        + SCHEDULED - Agendada
        + AUTHORIZED - Emitida
        + PROCESSING_CANCELLATION - Processando cancelamento
        + CANCELED - Cancelada
        + CANCELLATION_DENIED - Cancelamento negado
        + ERROR - Erro na emissão
+ customer - Identificador único do cliente no Asaas
+ payment - Identificador único da cobrança no Asaas
+ installment - Identificador único do parcelamento no Asaas
+ type - NFS-e
+ statusDescription - Descrição da situação atual da nota fiscal
+ serviceDescription - Descrição dos serviços da nota fiscal
+ pdfUrl - Link para arquivo pdf da nota fiscal emitida
+ xmlUrl - Link para arquivo xml da nota fiscal emitida
+ rpsSerie - Série da nota fiscal
+ rpsNumber - RPS convertido para a nota fiscal
+ number - Número da nota fiscal
+ validationCode - Código de verificação
+ value (number) - Valor Total
+ deductions (number) - Deduções
+ effectiveDate - Data de emissão da nota fiscal
+ externalReference - Identificador da nota fiscal no seu sistema
+ observations - Observações adicionais
+ estimatedTaxesDescription - Impostos estimados da nota fiscal
+ municipalServiceId - Identificador único do serviço municipal.
+ municipalServiceCode - Código de serviço municipal
+ municipalServiceName - Nome do serviço municipal
+ taxes (InvoiceTaxes) - Impostos da nota fiscal

## NewInvoice
+ payment - Identificador único da cobrança no Asaas
+ installment - Identificador único do parcelamento no Asaas
+ customer - Identificador único do cliente no Asaas
+ serviceDescription (required) - Descrição dos serviços da nota fiscal
+ observations (required) - Observações adicionais da nota fiscal
+ externalReference - Identificador da nota fiscal no seu sistema
+ value (required, number) - Valor
+ deductions (required, number) - Deduções. As deduções não alteram o valor total da nota fiscal, mas alteram a base de cálculo do ISS
+ effectiveDate (required) - Data de emissão da nota fiscal
+ municipalServiceId - Identificador único do serviço municipal.
+ municipalServiceCode - Código de serviço municipal
+ municipalServiceName - Nome do serviço municipal. Se não for informado, será utilizado o atributo municipalServiceCode como nome para identificação.
+ updatePayment - Atualizar o valor da cobrança com os impostos da nota já descontados.
+ taxes (InvoiceTaxes) - Impostos da nota fiscal

## InvoiceTaxes
+ retainIss (required, boolean) - Tomador da nota fiscal deve reter ISS ou não
+ iss (required, number) - Alíquota ISS
+ cofins (required, number) - Alíquota COFINS
+ csll (required, number) - Alíquota CSLL
+ inss (required, number) - Alíquota INSS
+ ir (required, number) - Alíquota IR
+ pis (required, number) - Alíquota PIS

## InvoiceMunicipalService
+ id (string) - Identificador único do serviço
+ description (string) - Descrição completa do serviço.
+ iss (number) - Alíquota ISS

## InvoiceMunicipalOptions
+ authenticationType (enum) - Tipo de autenticação necessária na prefeitura
    + Members
        + CERTIFICATE - Certificado digital
        + TOKEN - Token
        + USER_AND_PASSWORD - Usuário e senha
+ supportsCancellation (boolean) - Suporta ou não o cancelamento de notas fiscais automaticamente na sua prefeitura
+ usesSpecialTaxRegimes (boolean) - Necessário informar ou não o regime especial de tributação. Caso utilize, informe-o no campo `specialTaxRegime` do **Criar ou atualizar informações fiscais** de acordo com as opções retornadas na lista `specialTaxRegimesList`.
+ usesServiceListItem (boolean) - Necessário informar ou não o item da lista de serviço
+ usesStateInscription (boolean) - Determina se a prefeitura utiliza inscrição estadual. Caso utilize, informe-o no campo `stateInscription` ao configurar suas informações fiscais.
+ specialTaxRegimesList (array[SpecialTaxRegimesList]) - Opções de regime especial de tributação
+ municipalInscriptionHelp - Explicação sobre formato da inscrição municipal
+ specialTaxRegimeHelp - Explicação sobre o regime especial de tributação
+ serviceListItemHelp - Explicação sobre formato do item da lista de serviço
+ digitalCertificatedHelp - Explicação sobre certificado digital
+ accessTokenHelp - Explicação sobre token
+ municipalServiceCodeHelp - Explicação sobre formato do código de serviço municipal

## SpecialTaxRegimesList
+ label - Nome do regime especial de tributação
+ value - Identificador do regime especial de tributação

## CustomerFiscalInfo
+ email - Email utilizado pelo Asaas para enviar notificações e alertas de notas fiscais
+ municipalInscription - Inscrição municipal da empresa
+ stateInscription - Inscrição estadual da empresa
+ simplesNacional - Indica se a empresa é optante pelo simples nacional
+ culturalProjectsPromoter (boolean) - Identifica se a empresa é classificada como incentivador cultural
+ cnae - Código CNAE
+ specialTaxRegime - Identificador do regime especial de tributação
+ serviceListItem - Item da lista de serviço, conforme http://www.planalto.gov.br/ccivil_03/leis/LCP/Lcp116.htm
+ rpsSerie - Número de Série cadastrado para a empresa
+ rpsNumber (number) - Número de RPS utilizado na última nota fiscal emitida para a sua empresa.
+ loteNumber (number) - Número do Lote utilizado na última nota fiscal emitida pela sua empresa.
+ username - Usuário para acesso ao site da prefeitura da sua cidade
+ passwordSent (boolean) - Indica se a senha para acesso ao site da prefeitura foi informada
+ accessTokenSent (boolean) - Indica se o token para acesso ao site da prefeitura foi informado
+ certificateSent (boolean) - Indica se o certificado digital para acesso ao site da prefeitura foi informado

## NewCustomerFiscalInfo

+ email (required) - Email para notificações de notas fiscais
+ municipalInscription (optional) - Inscrição municipal da empresa
+ stateInscription (optional) - Inscrição estadual da empresa
+ simplesNacional (boolean, required) - Indica se a empresa é optante pelo simples nacional
+ culturalProjectsPromoter (boolean, optional) - Identifica se a empresa é classificada como incentivador cultural
+ cnae (optional) - Código CNAE
+ specialTaxRegime (optional) - Identificador do regime especial de tributação. Empresas do simples nacional geralmente optam pelo Microempresa Municipal
+ serviceListItem (optional) - Item da lista de serviço, conforme http://www.planalto.gov.br/ccivil_03/leis/LCP/Lcp116.htm
+ rpsSerie (optional) - Número de Série utilizado pela sua empresa para emissão de notas fiscais. Na maioria das cidades o número de série utilizado é '1' ou 'E'
+ rpsNumber (number, optional) - Número do RPS utilizado na última nota fiscal emitida pela sua empresa. Se a sua última NF emitida tem RPS igual a '100', esse campo deve ser preenchido com '101'. Se você nunca emitiu notas fiscais pelo site da sua prefeitura, informe '1' nesse campo
+ loteNumber (number, optional) - Número do Lote utilizado na última nota fiscal emitida pela sua empresa. Se o último lote utilizado na sua prefeitura for '25', esse campo deve ser preenchido com '26'. Informe esse campo apenas se sua prefeitura exigir a utilização de lotes
+ username (optional) - Usuário para acesso ao site da prefeitura da sua cidade
+ password (optional) - Senha para acesso ao site da prefeitura
+ accessToken (optional) - Token de acesso ao site da prefeitura (Caso o acesso ao site da sua prefeitura seja através por Token)
+ certificateFile (optional) - Arquivo (.pfx ou .p12) do certificado digital da empresa (Caso o acesso ao site da sua prefeitura através de certificado digital)
+ certificatePassword (optional) - Senha do certificado digital enviado (Caso o acesso ao site da sua prefeitura através de certificado digital)

## Webhook

+ url (required) - URL que receberá as informações de sincronização
+ email (required) - Email para receber as notificações em caso de erros na fila
+ apiVersion (number, required) - Versão utilizada da API. Utilize "3" para a versão v3
+ enabled (boolean, required) - Habilitar ou não o webhook
+ interrupted (boolean, required) - Situação da fila de sincronização
+ authToken (string, optional) - Token de autenticação

## WebhookResponse

+ object (string) - tipo do objeto de retorno (webhook)
+ url (string) - URL que receberá as informações de sincronização
+ email (string) - Email para receber as notificações em caso de erros na fila
+ apiVersion (number) - Versão utilizada da API.
+ enabled (boolean) - Habilitar ou não o webhook
+ interrupted (boolean) - Situação da fila de sincronização
+ authToken (string, optional) - Token de autenticação

## NewAccount
+ name (required) - Nome da conta
+ email (required) - Email da conta
+ loginEmail (optional) - Email para login da conta, caso não informado será utilizado o email da conta
+ cpfCnpj (required) - CPF ou CNPJ do proprietário da conta
+ companyType (enum) - Tipo da empresa (somente quando Pessoa Jurídica)
    + Members
        + MEI - Micro Empreendedor Individual
        + LIMITED - Empresa Limitada
        + INDIVIDUAL - Empresa Individual
        + ASSOCIATION - Associação
+ phone (required) - Fone fixo
+ mobilePhone (required) - Fone celular
+ address (required) - Logradouro
+ addressNumber (required) - Número do endereço
+ complement - Complemento do endereço
+ province (required) - Bairro
+ postalCode (required) - CEP do endereço

## Account
+ name (required) - Nome da conta
+ email (required) - Email da conta
+ loginEmail (optional) - Email para login da conta, caso não informado será utilizado o email da conta
+ cpfCnpj (required) - CPF ou CNPJ do proprietário da conta
+ companyType (enum) - Tipo da empresa (somente quando Pessoa Jurídica)
    + Members
        + MEI - Micro Empreendedor Individual
        + LIMITED - Empresa Limitada
        + INDIVIDUAL - Empresa Individual
        + ASSOCIATION - Associação
+ mobilePhone (required) - Fone celular
+ address (required) - Logradouro
+ addressNumber (required) - Número do endereço
+ complement - Complemento do endereço
+ province (required) - Bairro
+ postalCode (required) - CEP do endereço
+ personType (enum) - Tipo de Pessoa
    + Members
        + FISICA - Pessoa Física
        + JURIDICA - Pessoa Jurídica
+ city - Identificador único da cidade no Asaas
+ state - Sigla do Estado (SP, RJ, SC, ...)
+ country - País (Fixo Brasil)
+ walletId - Identificador único da carteira para fazer split de cobranças ou transferência entre contas Asaas

## AccountWithApiKey (Account)
+ apiKey - Chave da API para manipulação das informações da conta

## MyAccount
+ name (required) - Nome da conta
+ email (required) - Email da conta
+ cpfCnpj (required) - CPF ou CNPJ do proprietário da conta
+ companyType (enum) - Tipo da empresa (somente quando Pessoa Jurídica)
    + Members
        + MEI - Micro Empreendedor Individual
        + LIMITED - Empresa Limitada
        + INDIVIDUAL - Empresa Individual
        + ASSOCIATION - Associação
+ mobilePhone (required) - Fone celular
+ address (required) - Logradouro
+ addressNumber (required) - Número do endereço
+ complement - Complemento do endereço
+ province (required) - Bairro
+ postalCode (required) - CEP do endereço
+ personType (enum) - Tipo de Pessoa
    + Members
        + FISICA - Pessoa Física
        + JURIDICA - Pessoa Jurídica
+ city (CityObject) - Informações da cidade cadastrada em sua conta
+ inscricaoEstadual - Informação necessária para gerar notas fiscais
+ birthDate - Data de nascimento necessária caso as informações forem de pessoa física
+ status - Situação da conta
+ denialReason - Motivo pelo qual é necessário reenviar as informações

## CityObject
+ id - Identificador único da cidade no Asaas
+ name - Nome da cidade
+ district - Nome do distrito
+ state - Sigla do Estado (SP, RJ, SC, ...)

## NewPaymentCheckoutConfig
+ logoBackgroundColor (required) - Cor de fundo do logo
+ infoBackgroundColor (required) - Cor de fundo das suas informações
+ fontColor (required) - Cor da fonte das suas informações
+ enabled (required) - True para habilitar a personalização
+ logoFile - Logo que aparecerá no topo da fatura

## PaymentCheckoutConfig
+ logoBackgroundColor - Cor de fundo do logo
+ infoBackgroundColor - Cor de fundo das suas informações
+ fontColor - Cor da fonte das suas informações
+ enabled - True quando a personalização estiver habilitada
+ logoUrl - Link para download da logo
+ observations - Observações da análise de personalização da fatura
+ status - Situação da personalização da fatura

## NewSimulateReceivableAnticipation
+ installment - ID do parcelamento a ser antecipado
+ payment - ID da cobrança a ser antecipada

## SimulateReceivableAnticipation
+ installment - Identificador único do parcelamento a ser antecipado
+ payment - Identificador único da cobrança a ser antecipada.
+ anticipationDate - Data de solicitação da antecipação
+ dueDate - Data de vencimento da solicitação
+ anticipationDays - Dias até a antecipação
+ totalValue (number) - Valor total da cobrança a ser antecipada
+ fee (number) - Taxa de antecipação
+ netValue (number) - Valor líquido descontada a taxa de antecipação
+ value (number) - Valor da antecipação
+ isDocumentationRequired (boolean) - Determina a obrigatoriedade do envio de notas fiscais eletrônicas ou contratos de prestação de serviços na solicitação da antecipação

## NewReceivableAnticipation
+ agreementSignature - Nome do solicitante
+ installment (optional) - ID do parcelamento a ser antecipado
+ payment (optional) - ID da cobrança a ser antecipada
+ documents - Lista com uma ou mais notas fiscais eletrônicas ou Contratos de Prestação de Serviços, com firma reconhecida em cartório

## ReceivableAnticipation
+ id - Identificador único da antecipação
+ installment - Identificador único do parcelamento a ser antecipado
+ payment - Identificador único da cobrança a ser antecipada.
+ status (enum)
    + Members
        + PENDING - Em análise
        + DENIED - Negado
        + CREDITED - Creditado
        + DEBITED - Pago
        + CANCELLED - Cancelado
        + OVERDUE - Vencido
        + SCHEDULED - Agendado
+ anticipationDate - Data de solicitação da antecipação
+ dueDate - Data de vencimento da solicitação
+ requestDate - Data de solicitação da antecipação
+ anticipationDays - Dias até a antecipação
+ totalValue (number) - Valor total da cobrança a ser antecipada
+ fee (number) - Taxa de antecipação
+ netValue (number) - Valor líquido descontada a taxa de antecipação
+ value (number) - Valor da antecipação
+ denialObservation - Motivo de rejeição da antecipação

## NewSubscriptionInvoiceSettings
+ municipalServiceId - Identificador único do serviço municipal.
+ municipalServiceCode - Código de serviço municipal.
+ municipalServiceName - Nome do serviço municipal. Se não for informado, será utilizado o código do serviço municipal como nome para identificação.
+ updatePayment - Atualizar o valor da cobrança com os impostos da nota já descontados.
+ deductions (number) - Deduções. As deduções não alteram o valor total da nota fiscal, mas alteram a base de cálculo do ISS.
+ effectiveDatePeriod (enum) - Quando a nota fiscal será emitida.
    + Members
        + ON_PAYMENT_CONFIRMATION - Quando cada cobrança for paga.
        + ON_PAYMENT_DUE_DATE - No dia do vencimento de cada cobrança.
        + BEFORE_PAYMENT_DUE_DATE - (daysBeforeDueDate) dias antes do vencimento da cobrança.
        + ON_DUE_DATE_MONTH - No 1º dia do mesmo mês do vencimento de cada cobrança.
        + ON_NEXT_MONTH - No 1º dia do mês seguinte ao mês do vencimento de cada cobrança.
+ receivedOnly (boolean) - Emitir apenas para cobranças pagas.
+ daysBeforeDueDate (number) - Quantidade de dias antes do vencimento da cobrança.
+ observations - Observações adicionais da nota fiscal.
+ taxes (InvoiceTaxes) - Impostos da nota fiscal.

## UpdateSubscriptionInvoiceSettings
+ deductions (number) - Deduções. As deduções não alteram o valor total da nota fiscal, mas alteram a base de cálculo do ISS.
+ effectiveDatePeriod (enum) - Quando a nota fiscal será emitida.
    + Members
        + ON_PAYMENT_CONFIRMATION - Quando cada cobrança for paga.
        + ON_PAYMENT_DUE_DATE - No dia do vencimento de cada cobrança.
        + BEFORE_PAYMENT_DUE_DATE - (daysBeforeDueDate) dias antes do vencimento da cobrança.
        + ON_DUE_DATE_MONTH - No 1º dia do mesmo mês do vencimento de cada cobrança.
        + ON_NEXT_MONTH - No 1º dia do mês seguinte ao mês do vencimento de cada cobrança.
+ receivedOnly (boolean) - Emitir apenas para cobranças pagas.
+ daysBeforeDueDate (number) - Quantidade de dias antes do vencimento da cobrança.
+ observations - Observações adicionais da nota fiscal.
+ taxes (InvoiceTaxes) - Impostos da nota fiscal.

## Installment
+ id - Identificador único do parcelamento no Asaas
+ value (number) - Valor do parcelamento
+ netValue (number) -  Valor líquido do parcelamento
+ paymentValue (number) - Valor de cada parcela
+ installmentCount (number) - Número de parcelas
+ billingType (BillingTypeForCreation) - Forma de pagamento
+ paymentDate - Data de liquidação da cobrança no Asaas
+ description - Descrição do parcelamento
+ expirationDay - Data de vencimento de cada parcela
+ dateCreated - Data de criação do parcelamento
+ customer - Identificador único do cliente ao qual o parcelamento pertence
+ paymentLink - Identificador único do link de pagamentos ao qual o parcelamento pertence
+ transactionReceiptUrl - URL do comprovante de confirmação, recebimento, estorno ou remoção.

## Bill

+ id - Identificador único do pagamento de conta no Asaas
+ status (enum) - Status do pagamento de conta
    + Members
        + PENDING - Pendente
        + BANK_PROCESSING - Em processamento bancário
        + PAID - Pago
        + FAILED - Falhou
        + CANCELLED - Cancelado
+ value (number) - Valor a ser pago
+ discount (number) - Desconto atribuido ao pagamento
+ identificationField - Linha digitável do boleto a ser pago
+ dueDate - Data de vencimento da cobrança
+ scheduleDate - Data de agendamento do pagamento
+ paymentDate - Data em que o pagamento foi efetivado
+ fee - Taxa do Asaas para o pagamento de conta
+ description - Descrição do pagamento de conta
+ companyName - Empresa/Órgão emissor da cobrança
+ transactionReceiptUrl - Comprovante do pagamento de conta.
+ canBeCancelled - Se o pagamento pode ser cancelado
+ failReasons - Lista com motivos de falha no pagamento

## NewBill

+ identificationField (required) - Linha digitável do boleto
+ scheduleDate (optional) - Data de agendamento do pagamento
+ description (optional) - Descrição do pagamento de conta
+ discount (number, optional) - Desconto atribuido ao pagamento
+ dueDate (optional) - Data de vencimento da conta caso seja do tipo que não possui essa informação
+ value (number, optional) - Valor da conta caso seja do tipo que não possui essa informação (Ex: faturas de cartão de crédito)

## RequestBillSimulation

+ One Of
    + identificationField (required) - Linha digitável do boleto
    + barCode (required) - Código de barras do boleto

## BillSimulation
+ minimumScheduleDate - Data mínima permitida para agendamento
+ fee (number) - Taxa cobrada no pagamento da conta
+ bankSlipInfo (BankSlipInfo) - Informações do boleto a ser pago

## BankSlipInfo

+ identificationField - Linha digitável
+ value (number) - Valor
+ dueDate - Data de vencimento
+ companyName - Empresa/Órgão
+ bankCode - Código do banco emissor do boleto no sistema bancário
+ beneficiaryCpfCnpj - CPF ou CNPJ do beneficiário
+ beneficiaryName - Nome do beneficiário
+ allowChangeValue (boolean) - Se o valor pode ser alterado ou não
+ minValue (number) - Vamor máximo que pode ser alterado
+ maxValue (number) - Valor mínimo que pode ser alterado
+ discountValue (number) - Valor dos descontos
+ interestValue (number) - Valor do juros
+ fineValue (number) - Valor da multa
+ originalValue (number) - Valor original da conta
+ totalDiscountValue (number) - Valor total de descontos e abatimentos
+ totalAdditionalValue (number) - Valor total de juros e multa

## NewDunning

+ payment (required) - Identificador único da cobrança a ser recuperada no Asaas
+ type (required, DunningTypes) - Tipo de recuperação
+ description - Descrição do produto ou serviço prestado
+ customerName (required) - Nome do cliente
+ customerCpfCnpj (required) - CPF ou CNPJ do cliente
+ customerPrimaryPhone (required) - Telefone principal do cliente
+ customerSecondaryPhone - Telefone secundário do cliente
+ customerPostalCode (required) - CEP do endereço do cliente
+ customerAddress (required) - Logradouro do cliente
+ customerAddressNumber (required) - Número do endereço do cliente
+ customerProvince - Complemento do endereço do cliente
+ customerComplement (required) - Bairro do cliente
+ documents (required) - Nota fiscal e/ou contrato com firma reconhecida em cartório

## Dunning

+ id - Identificador único da recuperação no Asaas
+ dunningNumber - Número da recuperação
+ status (enum) - Status da recuperação
    + Members
        + PENDING - Pendente
        + AWAITING_APPROVAL - Aguardando aprovação
        + AWAITING_CANCELLATION - Aguardando cancelamento
        + PROCESSED - Em recuperação
        + PAID - Recuperado
        + PARTIALLY_PAID - Pagamento iniciado
        + DENIED - Negada
        + CANCELLED - Cancelada
+ type (DunningTypes) - Tipo de recuperação
+ payment - Identificador único da cobrança a ser recuperada no Asaas
+ requestDate - Data de solicitação
+ description - Descrição da recuperação
+ value - Valor da cobrança
+ feeValue - Custo e/ou taxa da recuperação
+ netValue - Valor líquido a ser recuperado
+ receivedInCashFeeValue - Taxa de recebimento em dinheiro
+ denialReason - Motivo da negação da recuperação
+ cancellationFeeValue - Taxa cobrada em caso de cancelamento
+ isNecessaryResendDocumentation (boolean) - Determinar se é preciso reenviar a documentação
+ canBeCancelled (boolean) - Se a recuperação pode ser cancelada

## RequestDunningSimulation

+ payment (required) - Identificador único da cobrança a ser recuperada no Asaas

## DunningSimulation

+ payment - Identificador único da cobrança a ser recuperada no Asaas
+ value - Valor da cobrança
+ typeSimulations (array[DunningTypeSimulation]) - Simulação de solicitação de recuperação para cada tipo de recuperação disponível

## DunningTypeSimulation

+ type (required, DunningTypes) - Tipo de recuperação
+ isAllowed (boolean) - Se é possível solicitar uma recuperação deste tipo
+ notAllowedReason - Motivo por não ser possível solicitar uma recuperação para este tipo.
+ startDate - Data prevista de inicio da recuperação
+ feeValue - Custo e/ou taxa da recuperação
+ netValue - Valor líquido a ser recuperado

## DunningHistory

+ type (enum) - Status da negociação
    + Members
        + IN_NEGOTIATION - Em negociação
        + NEGOTIATION_FAIL - Problemas na negociação
        + NEGOTIATED - Pagamento negociado
        + PAID - Pagamento realizado
+ description - Descrição do evento
+ eventDate - Data em que ocorreu o evento

## DunningPartialPayment

+ value - Valor pago
+ description - Descrição do pagamento
+ paymentDate - Data de pagamento

## DunningTypes (enum)
+ CREDIT_BUREAU - Negativação via Serasa

## NewPaymentLink
+ name (required) - Nome do link de pagamentos
+ description - Descrição do link de pagamentos
+ endDate - Data de encerramento, a partir desta data o seu link de pagamentos será desativado automaticamente
+ value - Valor do link de pagamentos, caso não informado o pagador poderá informar o quanto deseja pagar
+ billingType (BillingTypeForCreation, required) - Forma de pagamento permitida
+ chargeType (ChargeType, required) - Forma de cobrança
+ dueDateLimitDays - Caso seja possível o pagamento via boleto bancário, define a quantidade de dias úteis que o seu cliente poderá pagar o boleto após gerado
+ subscriptionCycle (SubscriptionCycle) - Periodicidade da cobrança, envio obrigatório caso a forma de cobrança selecionado seja Assinatura
+ maxInstallmentCount - Quantidade máxima de parcelas que seu cliente poderá parcelar o valor do link de pagamentos caso a forma de cobrança selecionado seja Parcelamento. Caso não informado o valor padrão será de 1 parcela
+ notificationEnabled - Define se os clientes cadastrados pelo link de pagamentos terão as notificações habilitadas. Caso não seja informado o valor padrão será true

## UpdatePaymentLink
+ name (required) - Nome do link de pagamentos
+ description - Descrição do link de pagamentos
+ endDate - Data de encerramento, a partir desta data o seu link de pagamentos será desativado automaticamente
+ value - Valor do link de pagamentos, caso não informado o pagador poderá informar o quanto deseja pagar
+ active - Determina se é o link de pagamentos está ativo
+ billingType (BillingTypeForCreation, required) - Forma de pagamento permitida
+ chargeType (ChargeType, required) - Forma de cobrança
+ dueDateLimitDays - Caso a forma de pagamento contemplar Boleto Bancário, este campo deverá ser enviado para definir a quantidade de dias úteis que o seu cliente poderá pagar após o boleto ser gerado.
+ subscriptionCycle (SubscriptionCycle) - Periodicidade da cobrança, envio obrigatório caso a forma de cobrança selecionado seja Assinatura
+ maxInstallmentCount - Quantidade máxima de parcelas que seu cliente poderá parcelar o valor do link de pagamentos, envio obrigatório caso a forma de cobrança selecionado seja Parcelamento.
+ notificationEnabled - Define se os clientes cadastrados pelo link de pagamentos terão as notificações habilitadas.

## PaymentLink
+ id - Identificador único do seu link de pagamentos
+ name - Nome do link de pagamentos
+ description - Descrição do link de pagamentos
+ active - Se o link de pagamentos esta ativo
+ url - Link de acesso do link de pagamentos
+ endDate - Data de encerramento
+ deleted - Determina se o seu link de pagamentos foi removido
+ value - Valor do link de pagamentos, caso não informado o pagador poderá informar o quanto deseja pagar
+ billingType (BillingTypeForCreation, required) - Forma de pagamento permitida
+ chargeType (ChargeType, required) - Forma de cobrança
+ viewCount - A quantidade de visualizações do seu link de pagamentos
+ dueDateLimitDays - Caso a forma de pagamento contemplar Boleto Bancário, este campo deverá ser enviado para definir a quantidade de dias úteis que o seu cliente poderá pagar após o boleto ser gerado.
+ subscriptionCycle (SubscriptionCycle) - Periodicidade da cobrança, envio obrigatório caso a forma de cobrança selecionado seja Assinatura
+ maxInstallmentCount - Quantidade máxima de parcelas que seu cliente poderá parcelar o valor do link de pagamentos, envio obrigatório caso a forma de cobrança selecionado seja Parcelamento.
+ notificationEnabled - Define se os clientes cadastrados pelo link de pagamentos terão as notificações habilitadas.

## PaymentLinkImage
+ id - Identificador único da imagem do seu link de pagamentos
+ main - Determina se está é a imagem principal
+ image (File) - Imagem

## File
+ originalName - Nome original do arquivo
+ size - Tamanho do arquivo
+ extension - Extensão do arquivo
+ previewUrl - Link para download do preview do arquivo
+ downloadUrl - Link para download do arquivo

## NewCreditBureauReport

+ customer (optional) - Identificador único do cliente no Asaas
+ cpfCnpj (optional) - CPF ou CNPJ do cliente. Informe este campo caso seu cliente não esteja cadastrado no Asaas
+ state (required, BrazilStates) - Estado em que deseja realizar a consulta.

## CreditBureauReport

+ id - Identificador único da consulta no Asaas
+ dateCreated - Data da realização da consulta
+ cpfCnpj - CPF ou CNPJ consultado manualmente
+ state - Estado em que foi feita a consulta
+ customer - Identificador único do cliente no Asaas
+ downloadUrl - Url para download da consulta. Disponível até as 23:59 do dia da consulta.
+ reportFile - PDF da consulta realizada em Base64. Este campo apenas é retornado no momento da criação da consulta.

## BrazilStates (enum)
+ AC - Acre
+ AL - Alagoas
+ AP - Amapá
+ AM - Amazonas
+ BA - Bahia
+ CE - Ceará
+ DF - Distrito Federal
+ ES - Espírito Santo
+ GO - Goiás
+ MA - Maranhão
+ MT - Mato Grosso
+ MS - Mato Grosso do Sul
+ MG - Minas Gerais
+ PA - Pará
+ PB - Paraíba
+ PR - Paraná
+ PE - Pernambuco
+ PI - Piauí
+ RJ - Rio de Janeiro
+ RN - Rio Grande do Norte
+ RS - Rio Grande do Sul
+ RO - Rondônia
+ RR - Roraima
+ SC - Santa Catarina
+ SP - São Paulo
+ SE - Sergipe
+ TO - Tocantins

## MobilePhoneRecharge

+ id - Identificador único da recarga de celular no Asaas
+ value (number) - Valor da recarga
+ phoneNumber (string) - Número do celular que foi solicitado a recarga
+ status (enum) - Status da recarga
    + Members
        + WAITING_CRITICAL_ACTION - Aguardando ação crítica
        + PENDING - Pendente
        + CONFIRMED - Confirmado
        + CANCELLED - Cancelado
+ canBeCancelled (boolean) - Se a recarga pode ser cancelada
+ operatorName (string) - Nome da operadora do celular
